<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head><meta name="referrer" content="origin-when-crossorigin" /><script type="text/javascript" async="" src="https://www.gstatic.com/recaptcha/api2/r20160216085053/recaptcha__en.js"></script><script type="text/javascript">var clicks=[];var handleClicks=true;var handleUnready=function(e){if(!handleClicks){return}var n=e.target;while(n&amp;&amp;n.tagName&amp;&amp;n.tagName!="A"){n=n.parentNode}if(n&amp;&amp;n.getAttribute&amp;&amp;n.getAttribute("href")==="#"){clicks.push(e.target);var t=document.getElementById("async_spinner");if(!t){t=document.createElement("div");t.setAttribute("id","async_spinner");t.setAttribute("class","__live_spinner");var a=document.createElement("div");a.setAttribute("class","__live_spinner_indicator");require.enqueue(function(){var e=require("shared/spin").createSpinnerElement({color:"#fff"}).el;if(require("gating").toggle_loading_animation){e=require("shared/loading").createLoadingDotsElement({size:"small"})}a.appendChild(e);t.appendChild(a);document.body.appendChild(t)})}}};var clearHandlers=function(){if(!handleClicks){return}handleClicks=false;if(document.detachEvent){document.detachEvent("onclick",handleUnready)}else{document.removeEventListener("click",handleUnready,true)}for(var e=0;e&lt;clicks.length;++e){clicks[e].click()}var n=document.getElementById("async_spinner");if(n){n.parentNode.removeChild(n)}};if(document.attachEvent){document.attachEvent("onclick",handleUnready)}else{document.addEventListener("click",handleUnready,true)}
</script><link rel="search" type="application/opensearchdescription+xml" href="/opensearch/description.xml" title="Quora" /><meta name="robots" content="noarchive" /><link rel="next" href="/Given-an-array-of-strings-how-can-I-find-a-small-set-of-substrings-such-that-the-array-of-strings-can-be-partitioned-based-on-the-matching-substrings-with-reasonably-even-distribution?page_id=2" /><link rel="dns-prefetch" href="//qsc.is.quoracdn.net" /><link rel="dns-prefetch" href="//qph.is.quoracdn.net" /><link rel="dns-prefetch" href="//qsf.is.quoracdn.net" /><link rel="dns-prefetch" href="//connect.facebook.net" /><link rel="dns-prefetch" href="//apis.google.com" /><link rel="dns-prefetch" href="//static.ak.facebook.com" /><link rel="dns-prefetch" href="//cdn.mathjax.org" /><link rel="dns-prefetch" href="//maps.googleapis.com" /><link rel="dns-prefetch" href="//maps.gstatic.com" /><link href="https://qsc.is.quoracdn.net/-c27be6787a25ecce.css" rel="stylesheet" type="text/css" /><script type="text/javascript" src="https://qsc.is.quoracdn.net/-02051fe361f19eeb.js"></script><script type="text/javascript" src="https://qsc.is.quoracdn.net/-a20f7c1e8e7b7218.js" async="" defer=""></script><script type="text/javascript">
                if (window.log &amp;&amp; log.enabled)
                    log('page', 'Done. Header chunk is processed.');
            </script><title>Given an array of strings, how can I find a small set of substrings such that the array of strings can be partitioned based on the matching substrings with reasonably even distribution? - Quora</title><link rel="canonical" href="https://www.quora.com/Given-an-array-of-strings-how-can-I-find-a-small-set-of-substrings-such-that-the-array-of-strings-can-be-partitioned-based-on-the-matching-substrings-with-reasonably-even-distribution" /><script type="text/javascript">
            if (window.w2_timing)
                w2_timing.logTime('bodyChunkStart');
            </script><style type="text/css"></style><style type="text/css" media="screen">#__w2_jkNjLQz_flash {visibility:hidden}</style></head><body class="web_page logged_out pretty_blogs gating-knows_about_suggestions-off gating-profile_overview-off gating-answers_profile-on gating-lookup_bar_grouped_results-off gating-offroad_force_slow_connection_mode-off gating-offroad_allow_slow_connection_mode-off gating-plato_question_page-off gating-plato_wide_header-off gating-qtext2_beta_group-off gating-toggle_loading_animation-on gating-qtext2_image_cursors-on gating-new_signup-off gating-quiet_notifs-off gating-plato_feed-off gating-plato_action_bar-off gating-new_answer_page-off gating-pretty_notifs-off"><script charset="utf-8" src="https://tch864258.tch.quora.com/up/chan22-8888/updates?min_seq=0&amp;channel=main-w-dep2608-1344518315271159384&amp;timeout=2000&amp;callback=jsonp153103f841e6b8a43f3"></script><script>
        
        require.install("gating", {client_side_logging: false,
feed_impression_feedback: false,
long_press: false,
mobile_a2a_ask_drawer: null,
enable_reading_time_logging: true,
queue_efficiency: false,
feed_edit_question: false,
batched_server_calls: true,
qtext2: true,
qtext2_beta_group: false,
cchannel_websockets: false,
toggle_loading_animation: true,
qtext2_auto_list: true,
qtext2_image_cursors: true,
qtext2_new_hr: true,
qtext2_unsaved_nav: true,
qtext2_oembedly: false,
first_nux_prompt: false,
new_answer_page: false,
enable_logging: true,
qtext2_whitespace_changes: true});
        
        require.install('settings', {"uid": null, "e2e_sample_rate": 0.1, "mobileRedirect": false, "formkey": "3785e7395124052d66321314ab71bd40", "isLoggedIn": false, "postkey": "38d51740f409e612f025bdf5ff75f9ac", "save_feed_story_debug": false, "androidAppPackageName": "com.quora.android", "appURL": null, "interface_strings": {"ok": "OK", "in_progress_warning": "Warning: Your work in progress has not been saved. Leaving or reloading this page will discard any unsaved changes.", "please_refresh": "Please refresh this page to receive new updates.", "update": "Update", "trying_to_regain": "Trying to regain internet connection...", "done": "Done", "cancel": "Cancel"}, "enableFrameBusting": true, "serverCallUrl": "/webnode2/server_call_POST?__instart__", "pageIsMobile": false, "force_use_absolute_links": false, "debug": false, "instance": "main", "instart_cchannel_setting": false, "pageMode": "post_reload", "stripePublishableKey": "pk_live_QxYUG1mlWD0QqXWe57LN0MrY", "revision": "ee5e75c151aa5634f2c259bcccddbf9b146d2d3b", "googleClientId": "917071888555.apps.googleusercontent.com", "interfaceLanguage": "en", "nid": 0, "enableAccessToken": 0, "default_uri_subdomain_name": null, "controller": "question", "googleCookiePolicy": "http://quora.com", "cookiePrefix": "m", "fbAppId": "136609459636", "trail": null, "scribeSampleRate": 1, "isParallel": true, "client_side_server_call_error_logging_percentage": 0.0, "subdomain_name": null, "batchedServerCallUrl": "/webnode2/batched_server_call_POST?__instart__", "actionTrail": null, "speedStandard": {"owner": 21, "e2e": null, "server_side": 600, "server_side_goal": 350}, "action": "q", "keyboardShortcuts": false, "subdomain_suffix": "quora.com"});
        </script>
        <div class="InteractionModeBanner fade_out" id="__w2_m1w3TO9_banner" style="display: none;"><div id="__w2_m1w3TO9_message">This page may be out of date. <span class="hidden" id="__w2_m1w3TO9_draftable"><a href="#" id="__w2_m1w3TO9_resume">Save your draft</a> before refreshing this page.</span><span id="__w2_m1w3TO9_not_draftable">Submit any pending changes before refreshing this page.</span></div></div><div class="ErrorBanner" id="__w2_c0whgrs_banner"><div id="__w2_c0whgrs_message"><span id="__w2_c0whgrs_text"></span> <a href="#" id="__w2_c0whgrs_hide">Hide this message</a>.</div></div><div class="modal_overlay hidden" id="__w2_modal_overlay_"><div class="modal_wrapper normal"><div id="__w2_modal_frame_placeholder_"></div></div></div><div id="ld_affqfs_18161"></div><div class="content_page_feed_offset"><div id="ld_affqfs_18163"><div class="SiteHeader LoggedOutSiteHeader" id="__w2_vLY4Eby_header"><div class="header_inner"><div class="header_logo"><a href="/"><span>Quora</span></a></div><div class="signup_login_buttons"><div class="header_signin_with_search_bar action_button" id="__w2_vLY4Eby_signup">Sign In</div></div><div class="header_search"><div class="search" id="__w2_vLY4Eby_context_navigator"><div class="TypersearchESSelector LookupBarSelector ServerCallSelector Selector" id="__w2_GTrJBkS_wrapper"><div class="selector_input_interaction"><input class="selector_input text" group="__w2_GTrJBkS_interaction" type="text" autofocus="True" placeholder="Search for questions, people, and topics" value="" w2cid="GTrJBkS" id="__w2_GTrJBkS_input" /><div class="selector_spinner hidden" id="__w2_GTrJBkS_spinner"><div class="LoadingDots tiny"><div class="dot first"></div><div class="dot second"></div><div class="dot third"></div></div></div></div><div class="lookup_bar_results_wrapper hidden" id="__w2_GTrJBkS_results_wrapper"><div class="results_wrapper"><div class="hidden resistance_wrapper" id="__w2_GTrJBkS_server_message"></div><div class="interstitials_and_results"><div class="hidden ask_interstitial" id="__w2_GTrJBkS_ask_mode_interstitial"><p class="ask_interstitial_content"><strong class="ask_interstitial_title" id="__w2_GTrJBkS_interstitial_title"></strong><span id="__w2_GTrJBkS_interstitial_text"></span></p></div><div class="results" id="__w2_GTrJBkS_results"></div></div></div></div></div></div></div></div></div></div><div id="__w2_vIIViYd_body_blur"></div><div id="ld_affqfs_18164"><div class="PMsgContainer" id="__w2_JhIGr76_pmsg_container"></div><div class="ContentWrapper"><div id="__w2_nNXRAII_content"><div id="ld_iddrsb_98226"><div class="QuestionPageBanners"><div id="ld_iddrsb_98229"></div><div id="ld_iddrsb_98230"></div><div id="ld_iddrsb_98231"></div><div id="ld_iddrsb_98232"></div><div id="ld_iddrsb_98233"></div></div><div class="NewGridQuestionPage QuestionMain"><div class="grid_page"><div class="layout_2col_main"><div class="header"><div id="ld_iddrsb_98228"><div class="QuestionArea"><div id="ld_qmcwch_93597"><div class="QuestionTopicHorizontalList TopicList" id="__w2_n2cUZX7_topics_list"><div id="ld_qmcwch_93601"><div class="QuestionTopicListItems SimpleToggle TopicListItems2 Toggle QuestionTopicHorizontalListItems" id="__w2_MuPE1sd__truncated"><span id="ld_bgodnd_104484"><div class="QuestionTopicListItem TopicListItem topic_pill" id="__w2_fDdZxYT_topic_list_item"><a class="topic_remove" href="#" id="__w2_fDdZxYT_remove_topic"></a><div id="ld_bgodnd_104487"><div class="hover_menu hidden white_bg show_nub" id="__w2_e8MinbS_menu"><div class="hover_menu_contents" id="__w2_e8MinbS_menu_contents"> </div></div><a class="TopicNameLink HoverMenu topic_name" href="/topic/Programming-Interviews" target="" action_mousedown="TopicLinkClickthrough" id="__w2_e8MinbS_link"><span class="name_text"><span id="ld_bgodnd_104490"><span class="TopicNameSpan TopicName">Programming Interviews</span></span></span></a></div></div></span><span id="ld_bgodnd_104485"><div class="QuestionTopicListItem TopicListItem topic_pill" id="__w2_fUfjPzv_topic_list_item"><a class="topic_remove" href="#" id="__w2_fUfjPzv_remove_topic"></a><div id="ld_bgodnd_104488"><div class="hover_menu hidden white_bg show_nub" id="__w2_tUnck3Z_menu"><div class="hover_menu_contents" id="__w2_tUnck3Z_menu_contents"> </div></div><a class="TopicNameLink HoverMenu topic_name" href="/topic/Algorithms" target="" action_mousedown="TopicLinkClickthrough" id="__w2_tUnck3Z_link"><span class="name_text"><span id="ld_bgodnd_104491"><span class="TopicNameSpan TopicName">Algorithms</span></span></span></a></div></div></span><span id="ld_bgodnd_104486"><div class="QuestionTopicListItem TopicListItem topic_pill" id="__w2_lHcaqYA_topic_list_item"><a class="topic_remove" href="#" id="__w2_lHcaqYA_remove_topic"></a><div id="ld_bgodnd_104489"><div class="hover_menu hidden white_bg show_nub" id="__w2_vvPk3dZ_menu"><div class="hover_menu_contents" id="__w2_vvPk3dZ_menu_contents"> </div></div><a class="TopicNameLink HoverMenu topic_name" href="/topic/Computer-Programming" target="" action_mousedown="TopicLinkClickthrough" id="__w2_vvPk3dZ_link"><span class="name_text"><span id="ld_bgodnd_104492"><span class="TopicNameSpan TopicName">Computer Programming</span></span></span></a></div></div></span></div></div></div></div><div id="ld_qmcwch_93598"><div class="question_text_edit"><h1><span id="ld_qmcwch_93600"><span id="ld_qmcwch_93602"></span><span id="__w2_gPDOvvg_question_text"><span class="rendered_qtext">Given an array of strings, how can I find a small set of substrings such that the array of strings can be partitioned based on the matching substrings with reasonably even distribution?</span></span></span></h1></div></div><div id="ld_qmcwch_93599"><div class="question_details"><div class="question_details_text inline_editor_content"><span class="rendered_qtext">The array size is between 10,000 to 30,000. Each string is less than 50 characters and are unique. The desired size of the substring set can be between 10-100. The desired runtime is less than 10 hours on a quad core server. It's not desirable for one string to match 2 or more substrings, but can be tolerated to some degree in order to make the problem solvable. Substring matching is done with simple string matching (no regular expression or wild card). The size of substring set should be between 10-100. The smaller the the better.<br /><br />Examples:<br />For this following input array<br />nbc abcd dfdf<br />waz abc ddf<br />12xyzetabt<br />33xyetrt<br />yuxy34<br /><br />The set of substrings (abc, xy) can be chosen to partition the array to<br />abc -&gt; (nbc abcd dfdf, waz abc ddf)<br />xy -&gt; (12xyzetabt, 33xyetrt, yuxy34)</span></div></div></div><div class="form_buttons hidden shared_form" id="__w2_ZSl68Yp_details_container"><a class="submit_button" id="__w2_ZSl68Yp_question_update">Update</a><a class="cancel_button" id="__w2_ZSl68Yp_question_cancel">Cancel</a></div></div></div></div><div id="ld_iddrsb_98227"><div id="ld_kumplh_94729"><div class="AnswerWikiArea hidden" id="answer_wiki"><h3>Answer Wiki</h3><div id="ld_kumplh_94735"><div id="__w2_OeXFNKi_wiki"><span class="rendered_qtext"></span></div></div></div></div><div id="ld_kumplh_94730"><div class="QuestionPageAnswerHeader"><div class="answer_count">1 Answer<span class="writing_now_section"><span id="ld_kumplh_94733"></span></span></div></div></div><div id="ld_kumplh_94731"></div><a class="anchor" name="answers" id="__w2_f2YePX4_answers_anchor" style="top: -53px;"></a><div class="AnswerListDiv" id="__w2_f2YePX4_answers"><div class="AnswerPagedList PagedList" tabindex="-1" id="ld_kumplh_94734"><div class="pagedlist_item" tabindex="-1" id="ld_fbbohe_110924"><div id="ld_lxfvue_101399"><div id="__w2_rIlohl8_actionable"><div id="ld_idsazx_97814"><div id="ld_bqpvat_94721"><a name="answer_3542037" target="_blank"></a><div class="Answer AnswerBase" id="__w2_EjiY1hF_answer"><div><div id="ld_iddrsb_98236"><div class="AnswerHeader ContentHeader"><div id="ld_otvinj_94923"><div class="hover_menu hidden white_bg show_nub" id="__w2_cPbYmyI_menu"><div class="hover_menu_contents" id="__w2_cPbYmyI_menu_contents"> </div></div><span class="photo_tooltip" id="__w2_cPbYmyI_link"><a href="/profile/Bruce-Rogers" id="__w2_aaPrcwy_link" target="_blank"><img class="profile_photo_img" src="https://qsf.is.quoracdn.net/-7405df969246c5e8.png" height="50" width="50" data-src="https://qph.is.quoracdn.net/main-thumb-52986-50-fcufFCJ8Mx0iDwjtHGwTECFkfJnrePt5.jpeg" alt="Bruce Rogers" /></a><span id="ld_otvinj_94926"></span></span></div><span class="feed_item_answer_user"><span id="ld_otvinj_94924"><div class="hover_menu hidden white_bg show_nub" id="__w2_kdBFe79_menu"><div class="hover_menu_contents" id="__w2_kdBFe79_menu_contents"> </div></div><a class="user" href="/profile/Bruce-Rogers" action_mousedown="UserLinkClickthrough" id="__w2_kdBFe79_link" target="_blank">Bruce Rogers</a><span class="IdentitySig ActorNameSig IdentityNameSig" id="__w2_bFqdPZl_bio"></span></span></span><div class="credibility_facts"><div id="ld_otvinj_94925"><div class="CredibilityFact">560 Views</div></div></div></div></div><div id="__w2_EjiY1hF_answer_content"><div id="ld_iddrsb_98237"></div><div id="ld_iddrsb_98238"></div><div id="ld_iddrsb_98239"><div class="ExpandedQText ExpandedAnswer" id="__w2_dU1aPhq_expanded"><span class="rendered_qtext"><pre class="prettyprint linenums prettyprinted"><ol class="linenums"><li class="L0"><code class="language-php"><span class="kwd">var</span><span class="pln"> fs </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">require</span><span class="pun">(</span><span class="str">'fs'</span><span class="pun">);</span></code></li><li class="L1"><code class="language-php"></code></li><li class="L2"><code class="language-php"><span class="kwd">function</span><span class="pln"> </span><span class="typ">UInt32</span><span class="pun">(</span><span class="pln">str</span><span class="pun">,</span><span class="pln"> pos</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code class="language-php"><span class="pln">  </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">str</span><span class="pun">.</span><span class="pln">charCodeAt</span><span class="pun">(</span><span class="pln">pos</span><span class="pun">++))</span><span class="pln"> </span><span class="pun">+</span></code></li><li class="L4"><code class="language-php"><span class="pln">         </span><span class="pun">(</span><span class="pln">str</span><span class="pun">.</span><span class="pln">charCodeAt</span><span class="pun">(</span><span class="pln">pos</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="lit">8</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span></code></li><li class="L5"><code class="language-php"><span class="pln">         </span><span class="pun">(</span><span class="pln">str</span><span class="pun">.</span><span class="pln">charCodeAt</span><span class="pun">(</span><span class="pln">pos</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="lit">16</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span></code></li><li class="L6"><code class="language-php"><span class="pln">         </span><span class="pun">(</span><span class="pln">str</span><span class="pun">.</span><span class="pln">charCodeAt</span><span class="pun">(</span><span class="pln">pos</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="lit">24</span><span class="pun">);</span></code></li><li class="L7"><code class="language-php"><span class="pun">}</span></code></li><li class="L8"><code class="language-php"></code></li><li class="L9"><code class="language-php"><span class="kwd">function</span><span class="pln"> </span><span class="typ">UInt16</span><span class="pun">(</span><span class="pln">str</span><span class="pun">,</span><span class="pln"> pos</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code class="language-php"><span class="pln">  </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">(</span><span class="pln">str</span><span class="pun">.</span><span class="pln">charCodeAt</span><span class="pun">(</span><span class="pln">pos</span><span class="pun">++))</span><span class="pln"> </span><span class="pun">+</span></code></li><li class="L1"><code class="language-php"><span class="pln">         </span><span class="pun">(</span><span class="pln">str</span><span class="pun">.</span><span class="pln">charCodeAt</span><span class="pun">(</span><span class="pln">pos</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="lit">8</span><span class="pun">);</span></code></li><li class="L2"><code class="language-php"><span class="pun">}</span></code></li><li class="L3"><code class="language-php"></code></li><li class="L4"><code class="language-php"><span class="kwd">function</span><span class="pln"> </span><span class="typ">Umul32</span><span class="pun">(</span><span class="pln">n</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code class="language-php"><span class="pln">  n </span><span class="pun">=</span><span class="pln"> n </span><span class="pun">|</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L6"><code class="language-php"><span class="pln">  m </span><span class="pun">=</span><span class="pln"> m </span><span class="pun">|</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L7"><code class="language-php"><span class="pln">  </span><span class="kwd">var</span><span class="pln"> nlo </span><span class="pun">=</span><span class="pln"> n </span><span class="pun">&amp;</span><span class="pln"> </span><span class="lit">0xffff</span><span class="pun">;</span></code></li><li class="L8"><code class="language-php"><span class="pln">  </span><span class="kwd">var</span><span class="pln"> nhi </span><span class="pun">=</span><span class="pln"> n </span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="lit">16</span><span class="pun">;</span></code></li><li class="L9"><code class="language-php"><span class="pln">  </span><span class="kwd">var</span><span class="pln"> res </span><span class="pun">=</span><span class="pln"> </span><span class="pun">((</span><span class="pln">nlo </span><span class="pun">*</span><span class="pln"> m</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="pun">(((</span><span class="pln">nhi </span><span class="pun">*</span><span class="pln"> m</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln"> </span><span class="lit">0xffff</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="lit">16</span><span class="pun">))</span><span class="pln"> </span><span class="pun">|</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L0"><code class="language-php"><span class="pln">  </span><span class="kwd">return</span><span class="pln"> res</span><span class="pun">;</span></code></li><li class="L1"><code class="language-php"><span class="pun">}</span></code></li><li class="L2"><code class="language-php"></code></li><li class="L3"><code class="language-php"><span class="kwd">function</span><span class="pln"> murmurHash</span><span class="pun">(</span><span class="pln">str</span><span class="pun">,</span><span class="pln"> seed</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code class="language-php"><span class="pln">  </span><span class="kwd">var</span><span class="pln"> m </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0x5bd1e995</span><span class="pun">;</span></code></li><li class="L5"><code class="language-php"><span class="pln">  </span><span class="kwd">var</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> </span><span class="lit">24</span><span class="pun">;</span></code></li><li class="L6"><code class="language-php"><span class="pln">  </span><span class="kwd">var</span><span class="pln"> h </span><span class="pun">=</span><span class="pln"> seed </span><span class="pun">^</span><span class="pln"> str</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span></code></li><li class="L7"><code class="language-php"><span class="pln">  </span><span class="kwd">var</span><span class="pln"> length </span><span class="pun">=</span><span class="pln"> str</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span></code></li><li class="L8"><code class="language-php"><span class="pln">  </span><span class="kwd">var</span><span class="pln"> currentIndex </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L9"><code class="language-php"><span class="pln">  </span></code></li><li class="L0"><code class="language-php"><span class="pln">  </span><span class="kwd">while</span><span class="pln"> </span><span class="pun">(</span><span class="pln">length </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="lit">4</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code class="language-php"><span class="pln">    </span><span class="kwd">var</span><span class="pln"> k </span><span class="pun">=</span><span class="pln"> </span><span class="typ">UInt32</span><span class="pun">(</span><span class="pln">str</span><span class="pun">,</span><span class="pln"> currentIndex</span><span class="pun">);</span></code></li><li class="L2"><code class="language-php"><span class="pln">    </span></code></li><li class="L3"><code class="language-php"><span class="pln">    k </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Umul32</span><span class="pun">(</span><span class="pln">k</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">);</span></code></li><li class="L4"><code class="language-php"><span class="pln">    k </span><span class="pun">^=</span><span class="pln"> k </span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> r</span><span class="pun">;</span></code></li><li class="L5"><code class="language-php"><span class="pln">    k </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Umul32</span><span class="pun">(</span><span class="pln">k</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">);</span></code></li><li class="L6"><code class="language-php"></code></li><li class="L7"><code class="language-php"><span class="pln">    h </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Umul32</span><span class="pun">(</span><span class="pln">h</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">);</span></code></li><li class="L8"><code class="language-php"><span class="pln">    h </span><span class="pun">^=</span><span class="pln"> k</span><span class="pun">;</span></code></li><li class="L9"><code class="language-php"></code></li><li class="L0"><code class="language-php"><span class="pln">    currentIndex </span><span class="pun">+=</span><span class="pln"> </span><span class="lit">4</span><span class="pun">;</span></code></li><li class="L1"><code class="language-php"><span class="pln">    length </span><span class="pun">-=</span><span class="pln"> </span><span class="lit">4</span><span class="pun">;</span></code></li><li class="L2"><code class="language-php"><span class="pln">  </span><span class="pun">}</span></code></li><li class="L3"><code class="language-php"><span class="pln">  </span></code></li><li class="L4"><code class="language-php"><span class="pln">  </span><span class="kwd">switch</span><span class="pln"> </span><span class="pun">(</span><span class="pln">length</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code class="language-php"><span class="pln">  </span><span class="kwd">case</span><span class="pln"> </span><span class="lit">3</span><span class="pun">:</span></code></li><li class="L6"><code class="language-php"><span class="pln">    h </span><span class="pun">^=</span><span class="pln"> </span><span class="typ">UInt16</span><span class="pun">(</span><span class="pln">str</span><span class="pun">,</span><span class="pln"> currentIndex</span><span class="pun">);</span></code></li><li class="L7"><code class="language-php"><span class="pln">    h </span><span class="pun">^=</span><span class="pln"> str</span><span class="pun">.</span><span class="pln">charCodeAt</span><span class="pun">(</span><span class="pln">currentIndex </span><span class="pun">+</span><span class="pln"> </span><span class="lit">2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&lt;&lt;</span><span class="pln"> </span><span class="lit">16</span><span class="pun">;</span></code></li><li class="L8"><code class="language-php"><span class="pln">    h </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Umul32</span><span class="pun">(</span><span class="pln">h</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">);</span></code></li><li class="L9"><code class="language-php"><span class="pln">    </span><span class="kwd">break</span><span class="pun">;</span></code></li><li class="L0"><code class="language-php"><span class="pln">    </span></code></li><li class="L1"><code class="language-php"><span class="pln">  </span><span class="kwd">case</span><span class="pln"> </span><span class="lit">2</span><span class="pun">:</span></code></li><li class="L2"><code class="language-php"><span class="pln">    h </span><span class="pun">^=</span><span class="pln"> </span><span class="typ">UInt16</span><span class="pun">(</span><span class="pln">str</span><span class="pun">,</span><span class="pln"> currentIndex</span><span class="pun">);</span></code></li><li class="L3"><code class="language-php"><span class="pln">    h </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Umul32</span><span class="pun">(</span><span class="pln">h</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">);</span></code></li><li class="L4"><code class="language-php"><span class="pln">    </span><span class="kwd">break</span><span class="pun">;</span></code></li><li class="L5"><code class="language-php"><span class="pln">    </span></code></li><li class="L6"><code class="language-php"><span class="pln">  </span><span class="kwd">case</span><span class="pln"> </span><span class="lit">1</span><span class="pun">:</span></code></li><li class="L7"><code class="language-php"><span class="pln">    h </span><span class="pun">^=</span><span class="pln"> str</span><span class="pun">.</span><span class="pln">charCodeAt</span><span class="pun">(</span><span class="pln">currentIndex</span><span class="pun">);</span></code></li><li class="L8"><code class="language-php"><span class="pln">    h </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Umul32</span><span class="pun">(</span><span class="pln">h</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">);</span></code></li><li class="L9"><code class="language-php"><span class="pln">    </span><span class="kwd">break</span><span class="pun">;</span></code></li><li class="L0"><code class="language-php"><span class="pln">  </span><span class="pun">}</span></code></li><li class="L1"><code class="language-php"></code></li><li class="L2"><code class="language-php"><span class="pln">  h </span><span class="pun">^=</span><span class="pln"> h </span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="lit">13</span><span class="pun">;</span></code></li><li class="L3"><code class="language-php"><span class="pln">  h </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Umul32</span><span class="pun">(</span><span class="pln">h</span><span class="pun">,</span><span class="pln"> m</span><span class="pun">);</span></code></li><li class="L4"><code class="language-php"><span class="pln">  h </span><span class="pun">^=</span><span class="pln"> h </span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="lit">15</span><span class="pun">;</span></code></li><li class="L5"><code class="language-php"></code></li><li class="L6"><code class="language-php"><span class="pln">  </span><span class="kwd">return</span><span class="pln"> h </span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L7"><code class="language-php"><span class="pun">}</span></code></li><li class="L8"><code class="language-php"></code></li><li class="L9"><code class="language-php"><span class="com">// for finding counts of common strings without exhausting memory with uncommon strings</span></code></li><li class="L0"><code class="language-php"><span class="kwd">function</span><span class="pln"> </span><span class="typ">MatchCounter</span><span class="pun">(</span><span class="pln">cache_mask</span><span class="pun">,</span><span class="pln"> min_count</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code class="language-php"><span class="pln">  </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">candidates </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{};</span></code></li><li class="L2"><code class="language-php"><span class="pln">  </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">table </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{};</span></code></li><li class="L3"><code class="language-php"><span class="pln">  </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">add </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">name</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code class="language-php"><span class="pln">    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">table</span><span class="pun">[</span><span class="pln">name</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code class="language-php"><span class="pln">      </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">++</span><span class="kwd">this</span><span class="pun">.</span><span class="pln">table</span><span class="pun">[</span><span class="pln">name</span><span class="pun">];</span></code></li><li class="L6"><code class="language-php"><span class="pln">    </span><span class="pun">}</span></code></li><li class="L7"><code class="language-php"><span class="pln">    </span><span class="kwd">var</span><span class="pln"> idx </span><span class="pun">=</span><span class="pln"> murmurHash</span><span class="pun">(</span><span class="pln">name</span><span class="pun">)</span><span class="pln"> </span><span class="pun">&amp;</span><span class="pln"> cache_mask</span><span class="pun">;</span></code></li><li class="L8"><code class="language-php"><span class="pln">    </span><span class="kwd">var</span><span class="pln"> c </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">candidates</span><span class="pun">[</span><span class="pln">idx</span><span class="pun">];</span></code></li><li class="L9"><code class="language-php"><span class="pln">    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">c </span><span class="pun">||</span><span class="pln"> </span><span class="typ">Page</span><span class="pln"> on C </span><span class="pun">!=</span><span class="pln"> name</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code class="language-php"><span class="pln">      c </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">candidates</span><span class="pun">[</span><span class="pln">idx</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> count</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> name</span><span class="pun">:</span><span class="pln"> name </span><span class="pun">};</span></code></li><li class="L1"><code class="language-php"><span class="pln">    </span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code class="language-php"><span class="pln">      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">candidates</span><span class="pun">[</span><span class="pln">idx</span><span class="pun">].</span><span class="pln">count</span><span class="pun">++;</span></code></li><li class="L3"><code class="language-php"><span class="pln">    </span><span class="pun">}</span></code></li><li class="L4"><code class="language-php"><span class="pln">    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">c </span><span class="pun">&amp;&amp;</span><span class="pln"> c</span><span class="pun">.</span><span class="pln">count </span><span class="pun">&gt;=</span><span class="pln"> min_count</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code class="language-php"><span class="pln">      </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">table</span><span class="pun">[</span><span class="typ">Page</span><span class="pln"> on C</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> c</span><span class="pun">.</span><span class="pln">count</span><span class="pun">;</span></code></li><li class="L6"><code class="language-php"><span class="pln">      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Page</span><span class="pln"> on C </span><span class="pun">==</span><span class="pln"> name</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code class="language-php"><span class="pln">        </span><span class="kwd">delete</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">candidates</span><span class="pun">[</span><span class="pln">idx</span><span class="pun">];</span></code></li><li class="L8"><code class="language-php"><span class="pln">      </span><span class="pun">}</span></code></li><li class="L9"><code class="language-php"><span class="pln">    </span><span class="pun">}</span></code></li><li class="L0"><code class="language-php"><span class="pln">    </span><span class="kwd">return</span><span class="pln"> c</span><span class="pun">.</span><span class="pln">count</span><span class="pun">;</span></code></li><li class="L1"><code class="language-php"><span class="pln">  </span><span class="pun">};</span></code></li><li class="L2"><code class="language-php"></code></li><li class="L3"><code class="language-php"><span class="pln">  </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">sort </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">label</span><span class="pun">,</span><span class="pln">count</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code class="language-php"><span class="pln">    </span><span class="kwd">var</span><span class="pln"> list </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L5"><code class="language-php"><span class="pln">    </span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> i </span><span class="kwd">in</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">table</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code class="language-php"><span class="pln">      </span><span class="kwd">var</span><span class="pln"> obj </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{};</span></code></li><li class="L7"><code class="language-php"><span class="pln">      obj</span><span class="pun">[</span><span class="pln">label</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> i</span><span class="pun">;</span></code></li><li class="L8"><code class="language-php"><span class="pln">      obj</span><span class="pun">[</span><span class="pln">count</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">this</span><span class="pun">.</span><span class="pln">table</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span></code></li><li class="L9"><code class="language-php"><span class="pln">      list</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">obj</span><span class="pun">);</span></code></li><li class="L0"><code class="language-php"><span class="pln">    </span><span class="pun">}</span></code></li><li class="L1"><code class="language-php"><span class="pln">    list</span><span class="pun">.</span><span class="pln">sort</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">a</span><span class="pun">,</span><span class="pln">b</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code class="language-php"><span class="pln">      </span><span class="kwd">return</span><span class="pln"> b</span><span class="pun">[</span><span class="pln">count</span><span class="pun">]</span><span class="pln"> </span><span class="pun">-</span><span class="pln"> a</span><span class="pun">[</span><span class="pln">count</span><span class="pun">];</span></code></li><li class="L3"><code class="language-php"><span class="pln">    </span><span class="pun">});</span></code></li><li class="L4"><code class="language-php"><span class="pln">    </span><span class="kwd">return</span><span class="pln"> list</span><span class="pun">;</span></code></li><li class="L5"><code class="language-php"><span class="pln">  </span><span class="pun">};</span></code></li><li class="L6"><code class="language-php"><span class="pun">}</span></code></li><li class="L7"><code class="language-php"></code></li><li class="L8"><code class="language-php"><span class="kwd">function</span><span class="pln"> countMatches</span><span class="pun">(</span><span class="pln">words</span><span class="pun">,</span><span class="pln"> blockSize</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> mc </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">new</span><span class="pln"> </span><span class="typ">MatchCounter</span><span class="pun">(</span><span class="lit">0xffff</span><span class="pun">,</span><span class="pln"> words</span><span class="pun">.</span><span class="pln">length </span><span class="pun">/</span><span class="pln"> </span><span class="lit">1000</span><span class="pun">);</span></code></li><li class="L0"><code class="language-php"><span class="pln">	</span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">words</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln">i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code class="language-php"><span class="pln">		</span><span class="kwd">var</span><span class="pln"> word </span><span class="pun">=</span><span class="pln"> words</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span></code></li><li class="L2"><code class="language-php"><span class="pln">		</span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> j</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">j</span><span class="pun">&lt;</span><span class="pln">word</span><span class="pun">.</span><span class="pln">length</span><span class="pun">-</span><span class="pln">blockSize</span><span class="pun">;</span><span class="pln">j</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code class="language-php"><span class="pln">			mc</span><span class="pun">.</span><span class="pln">add</span><span class="pun">(</span><span class="pln">word</span><span class="pun">.</span><span class="pln">substr</span><span class="pun">(</span><span class="pln">j</span><span class="pun">,</span><span class="pln">blockSize</span><span class="pun">));</span><span class="pln"> </span><span class="com">// check for same-word dups?</span></code></li><li class="L4"><code class="language-php"><span class="pln">		</span><span class="pun">}</span></code></li><li class="L5"><code class="language-php"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L6"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> list </span><span class="pun">=</span><span class="pln"> mc</span><span class="pun">.</span><span class="pln">sort</span><span class="pun">(</span><span class="str">'name'</span><span class="pun">,</span><span class="str">'count'</span><span class="pun">);</span></code></li><li class="L7"><code class="language-php"><span class="pln">	</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">list</span><span class="pun">.</span><span class="pln">length </span><span class="pun">&amp;&amp;</span><span class="pln"> list</span><span class="pun">[</span><span class="lit">0</span><span class="pun">].</span><span class="pln">count </span><span class="pun">&gt;</span><span class="pln"> words</span><span class="pun">.</span><span class="pln">length</span><span class="pun">/</span><span class="lit">100</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code class="language-php"><span class="pln">		</span><span class="kwd">return</span><span class="pln"> list</span><span class="pun">;</span></code></li><li class="L9"><code class="language-php"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L0"><code class="language-php"><span class="pun">}</span></code></li><li class="L1"><code class="language-php"></code></li><li class="L2"><code class="language-php"><span class="kwd">function</span><span class="pln"> countUniques</span><span class="pun">(</span><span class="pln">scoreboard</span><span class="pun">,</span><span class="pln"> words</span><span class="pun">,</span><span class="pln"> entry</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L3"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> dupCount </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L4"><code class="language-php"><span class="pln">	</span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> k</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">k</span><span class="pun">&lt;</span><span class="pln">words</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln">k</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L5"><code class="language-php"><span class="pln">		</span><span class="kwd">var</span><span class="pln"> word </span><span class="pun">=</span><span class="pln"> words</span><span class="pun">[</span><span class="pln">k</span><span class="pun">];</span></code></li><li class="L6"><code class="language-php"><span class="pln">		</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">word</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(Главная)</span><span class="pln"> </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code class="language-php"><span class="pln">			</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">scoreboard</span><span class="pun">[</span><span class="pln">word</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L8"><code class="language-php"><span class="pln">				dupCount</span><span class="pun">++;</span></code></li><li class="L9"><code class="language-php"><span class="pln">			</span><span class="pun">}</span></code></li><li class="L0"><code class="language-php"><span class="pln">		</span><span class="pun">}</span></code></li><li class="L1"><code class="language-php"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L2"><code class="language-php"><span class="pln">	</span><span class="kwd">return</span><span class="pln"> dupCount</span><span class="pun">;</span></code></li><li class="L3"><code class="language-php"><span class="pun">}</span></code></li><li class="L4"><code class="language-php"></code></li><li class="L5"><code class="language-php"><span class="kwd">function</span><span class="pln"> setScoreboard</span><span class="pun">(</span><span class="pln">scoreboard</span><span class="pun">,</span><span class="pln"> words</span><span class="pun">,</span><span class="pln"> entry</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code class="language-php"><span class="pln">	</span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> k</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">k</span><span class="pun">&lt;</span><span class="pln">words</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln">k</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code class="language-php"><span class="pln">		</span><span class="kwd">var</span><span class="pln"> word </span><span class="pun">=</span><span class="pln"> words</span><span class="pun">[</span><span class="pln">k</span><span class="pun">];</span></code></li><li class="L8"><code class="language-php"><span class="pln">		</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">word</span><span class="pun">.</span><span class="pln">indexOf</span><span class="pun">(Главная)</span><span class="pln"> </span><span class="pun">&gt;=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code class="language-php"><span class="pln">			</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">scoreboard</span><span class="pun">[</span><span class="pln">word</span><span class="pun">])</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code class="language-php"><span class="pln">				scoreboard</span><span class="pun">[</span><span class="pln">word</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span></code></li><li class="L1"><code class="language-php"><span class="pln">			</span><span class="pun">}</span></code></li><li class="L2"><code class="language-php"><span class="pln">		</span><span class="pun">}</span></code></li><li class="L3"><code class="language-php"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L4"><code class="language-php"><span class="pun">}</span></code></li><li class="L5"><code class="language-php"></code></li><li class="L6"><code class="language-php"><span class="kwd">function</span><span class="pln"> pickMatches</span><span class="pun">(</span><span class="pln">words</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> MAX_PARTITIONS </span><span class="pun">=</span><span class="pln"> </span><span class="lit">500</span><span class="pun">;</span></code></li><li class="L8"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> MIN_PARTITIONS </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pun">;</span></code></li><li class="L9"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> MAX_MATCHLEN </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pun">;</span></code></li><li class="L0"><code class="language-php"></code></li><li class="L1"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> results </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L2"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> totalMatches </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L3"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> minCount </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Math</span><span class="pun">.</span><span class="pln">max</span><span class="pun">(</span><span class="lit">2</span><span class="pun">,</span><span class="pln">words</span><span class="pun">.</span><span class="pln">length </span><span class="pun">/</span><span class="pln"> MAX_PARTITIONS</span><span class="pun">);</span></code></li><li class="L4"><code class="language-php"><span class="pln">	</span><span class="com">//console.log(minCount);</span></code></li><li class="L5"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> scoreboard </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{};</span></code></li><li class="L6"><code class="language-php"><span class="pln">	</span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> i</span><span class="pun">=</span><span class="pln">MAX_MATCHLEN</span><span class="pun">;</span><span class="pln">i</span><span class="pun">&gt;=</span><span class="lit">1</span><span class="pun">;</span><span class="pln">i</span><span class="pun">--)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L7"><code class="language-php"><span class="pln">		</span><span class="kwd">var</span><span class="pln"> list </span><span class="pun">=</span><span class="pln"> countMatches</span><span class="pun">(</span><span class="pln">words</span><span class="pun">,</span><span class="pln"> i</span><span class="pun">);</span></code></li><li class="L8"><code class="language-php"><span class="pln">		</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(!</span><span class="pln">list</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code class="language-php"><span class="pln">			</span><span class="kwd">continue</span><span class="pun">;</span></code></li><li class="L0"><code class="language-php"><span class="pln">		</span><span class="pun">}</span></code></li><li class="L1"><code class="language-php"><span class="pln">		</span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> j</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">j</span><span class="pun">&lt;</span><span class="pln">list</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln">j</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code class="language-php"><span class="pln">			</span><span class="kwd">var</span><span class="pln"> entry </span><span class="pun">=</span><span class="pln"> list</span><span class="pun">[</span><span class="pln">j</span><span class="pun">];</span></code></li><li class="L3"><code class="language-php"><span class="pln">			</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">count </span><span class="pun">&gt;</span><span class="pln"> minCount</span><span class="pun">*</span><span class="pln">MAX_PARTITIONS</span><span class="pun">/</span><span class="pln">MIN_PARTITIONS</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L4"><code class="language-php"><span class="pln">				</span><span class="kwd">continue</span><span class="pun">;</span></code></li><li class="L5"><code class="language-php"><span class="pln">			</span><span class="pun">}</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">entry</span><span class="pun">.</span><span class="pln">count </span><span class="pun">&lt;</span><span class="pln"> minCount</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code class="language-php"><span class="pln">				</span><span class="kwd">break</span><span class="pun">;</span></code></li><li class="L7"><code class="language-php"><span class="pln">			</span><span class="pun">}</span></code></li><li class="L8"><code class="language-php"><span class="pln">			</span><span class="kwd">var</span><span class="pln"> uniqueCount </span><span class="pun">=</span><span class="pln"> countUniques</span><span class="pun">(</span><span class="pln">scoreboard</span><span class="pun">,</span><span class="pln"> words</span><span class="pun">,</span><span class="pln"> entry</span><span class="pun">);</span></code></li><li class="L9"><code class="language-php"><span class="pln">			</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">uniqueCount </span><span class="pun">&gt;=</span><span class="pln"> minCount</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code class="language-php"><span class="pln">				setScoreboard</span><span class="pun">(</span><span class="pln">scoreboard</span><span class="pun">,</span><span class="pln"> words</span><span class="pun">,</span><span class="pln"> entry</span><span class="pun">);</span></code></li><li class="L1"><code class="language-php"><span class="pln">				totalMatches </span><span class="pun">+=</span><span class="pln"> uniqueCount</span><span class="pun">;</span></code></li><li class="L2"><code class="language-php"><span class="pln">				</span><span class="com">//console.log(Главная, uniqueCount, entry.count);</span></code></li><li class="L3"><code class="language-php"><span class="pln">				</span><span class="com">//console.log()</span></code></li><li class="L4"><code class="language-php"><span class="pln">				results</span><span class="pun">.</span><span class="pln">push</span><span class="pun">({</span><span class="pln">match</span><span class="pun">:</span><span class="pln"> </span><span class="pun">Главная,</span><span class="pln"> unique</span><span class="pun">:</span><span class="pln"> uniqueCount</span><span class="pun">,</span><span class="pln"> count</span><span class="pun">:</span><span class="pln"> entry</span><span class="pun">.</span><span class="pln">count</span><span class="pun">});</span></code></li><li class="L5"><code class="language-php"><span class="pln">			</span><span class="pun">}</span></code></li><li class="L6"><code class="language-php"><span class="pln">		</span><span class="pun">}</span></code></li><li class="L7"><code class="language-php"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L8"><code class="language-php"><span class="pln">	uniqueCount </span><span class="pun">=</span><span class="pln"> words</span><span class="pun">.</span><span class="pln">length </span><span class="pun">-</span><span class="pln"> totalMatches</span><span class="pun">;</span></code></li><li class="L9"><code class="language-php"><span class="pln">	</span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">uniqueCount</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code class="language-php"><span class="pln">		results</span><span class="pun">.</span><span class="pln">push</span><span class="pun">({</span><span class="pln">match</span><span class="pun">:</span><span class="pln"> </span><span class="str">''</span><span class="pun">,</span><span class="pln"> unique</span><span class="pun">:</span><span class="pln"> uniqueCount</span><span class="pun">,</span><span class="pln"> count</span><span class="pun">:</span><span class="pln"> totalMatches</span><span class="pun">});</span></code></li><li class="L1"><code class="language-php"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L2"><code class="language-php"><span class="pln">	</span><span class="kwd">return</span><span class="pln"> results</span><span class="pun">;</span></code></li><li class="L3"><code class="language-php"><span class="pun">}</span></code></li><li class="L4"><code class="language-php"></code></li><li class="L5"><code class="language-php"><span class="kwd">function</span><span class="pln"> generateTestWords</span><span class="pun">(</span><span class="pln">numWords</span><span class="pun">,</span><span class="pln"> numParts</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L6"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> words </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[];</span></code></li><li class="L7"><code class="language-php"><span class="pln">	</span><span class="kwd">var</span><span class="pln"> dictWords </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="str">''</span><span class="pun">+</span><span class="pln">fs</span><span class="pun">.</span><span class="pln">readFileSync</span><span class="pun">(</span><span class="str">'/usr/share/dict/words'</span><span class="pun">)).</span><span class="pln">split</span><span class="pun">(</span><span class="str">'\n'</span><span class="pun">);</span></code></li><li class="L8"><code class="language-php"><span class="pln">	</span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">numWords</span><span class="pun">;</span><span class="pln">i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L9"><code class="language-php"><span class="pln">		</span><span class="kwd">var</span><span class="pln"> count </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="pun">(</span><span class="typ">Math</span><span class="pun">.</span><span class="pln">random</span><span class="pun">()</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> numParts</span><span class="pun">)|</span><span class="lit">0</span><span class="pun">;</span></code></li><li class="L0"><code class="language-php"><span class="pln">		</span><span class="kwd">var</span><span class="pln"> str </span><span class="pun">=</span><span class="pln"> </span><span class="str">''</span><span class="pun">;</span></code></li><li class="L1"><code class="language-php"><span class="pln">		</span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> j</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">j</span><span class="pun">&lt;</span><span class="pln">count</span><span class="pun">;</span><span class="pln">j</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L2"><code class="language-php"><span class="pln">			str </span><span class="pun">+=</span><span class="pln"> dictWords</span><span class="pun">[(</span><span class="typ">Math</span><span class="pun">.</span><span class="pln">random</span><span class="pun">()</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> dictWords</span><span class="pun">.</span><span class="pln">length</span><span class="pun">)|</span><span class="lit">0</span><span class="pun">].</span><span class="pln">toLowerCase</span><span class="pun">();</span></code></li><li class="L3"><code class="language-php"><span class="pln">		</span><span class="pun">}</span></code></li><li class="L4"><code class="language-php"><span class="pln">		words</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="pln">str</span><span class="pun">);</span></code></li><li class="L5"><code class="language-php"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L6"><code class="language-php"><span class="pln">	</span><span class="kwd">return</span><span class="pln"> words</span><span class="pun">;</span></code></li><li class="L7"><code class="language-php"><span class="pun">}</span></code></li><li class="L8"><code class="language-php"></code></li><li class="L9"><code class="language-php"><span class="kwd">function</span><span class="pln"> printResults</span><span class="pun">(</span><span class="pln">results</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L0"><code class="language-php"><span class="pln">	</span><span class="kwd">for</span><span class="pun">(</span><span class="kwd">var</span><span class="pln"> i</span><span class="pun">=</span><span class="lit">0</span><span class="pun">;</span><span class="pln">i</span><span class="pun">&lt;</span><span class="pln">results</span><span class="pun">.</span><span class="pln">length</span><span class="pun">;</span><span class="pln">i</span><span class="pun">++)</span><span class="pln"> </span><span class="pun">{</span></code></li><li class="L1"><code class="language-php"><span class="pln">		</span><span class="kwd">var</span><span class="pln"> r </span><span class="pun">=</span><span class="pln"> results</span><span class="pun">[</span><span class="pln">i</span><span class="pun">];</span></code></li><li class="L2"><code class="language-php"><span class="pln">		console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">(</span><span class="pln">JSON</span><span class="pun">.</span><span class="pln">stringify</span><span class="pun">(</span><span class="pln">r</span><span class="pun">));</span></code></li><li class="L3"><code class="language-php"><span class="pln">	</span><span class="pun">}</span></code></li><li class="L4"><code class="language-php"><span class="pln">	console</span><span class="pun">.</span><span class="pln">log</span><span class="pun">();</span></code></li><li class="L5"><code class="language-php"><span class="pun">}</span></code></li><li class="L6"><code class="language-php"></code></li><li class="L7"><code class="language-php"><span class="kwd">var</span><span class="pln"> results</span><span class="pun">;</span></code></li><li class="L8"><code class="language-php"><span class="pln">results </span><span class="pun">=</span><span class="pln"> pickMatches</span><span class="pun">(</span><span class="pln">generateTestWords</span><span class="pun">(</span><span class="lit">10000</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">));</span></code></li><li class="L9"><code class="language-php"><span class="pln">printResults</span><span class="pun">(</span><span class="pln">results</span><span class="pun">);</span></code></li><li class="L0"><code class="language-php"></code></li><li class="L1"><code class="language-php"><span class="pln">results </span><span class="pun">=</span><span class="pln"> pickMatches</span><span class="pun">([</span><span class="str">'nbc abcd dfdf'</span><span class="pun">,</span><span class="str">'waz abc ddf'</span><span class="pun">,</span><span class="str">',12xyzetabt'</span><span class="pun">,</span><span class="str">'33xyetrt'</span><span class="pun">,</span><span class="str">'yuxy34'</span><span class="pun">]);</span></code></li><li class="L2"><code class="language-php"><span class="pln">printResults</span><span class="pun">(</span><span class="pln">results</span><span class="pun">);</span></code></li><li class="L3"><code class="language-php"></code></li></ol></pre></span><div id="ld_iddrsb_98240"><div class="ContentFooter AnswerFooter" id="__w2_K2Ia3Ya_content_footer"><span id="ld_ncmcdc_98328"><a class="answer_permalink" href="/Given-an-array-of-strings-how-can-I-find-a-small-set-of-substrings-such-that-the-array-of-strings-can-be-partitioned-based-on-the-matching-substrings-with-reasonably-even-distribution/answer/Bruce-Rogers" action_mousedown="AnswerPermalinkClickthrough" id="__w2_AiUS3Ld_link" target="_blank">Updated Nov 20, 2013</a></span><span class="bullet"> • </span><a class="AnswerVoterListModalLink VoterListModalLink" href="/api/mobile_expanded_voter_list?type=answer&amp;key=XrjRynRv5E4" id="__w2_Svdfw8D_modal_link" target="_blank">View Upvotes</a><span id="ld_ncmcdc_98329"></span></div></div></div></div></div></div></div></div></div></div></div></div><div class="pagedlist_item" tabindex="-1" id="ld_fbbohe_110925"><div id="ld_mewqqx_97581"><div id="__w2_H14iZ2d_actionable"><div id="ld_ezibhl_96441"><div id="ld_ifktdf_97877"><div class="CollapsedAnswersSectionCollapsed SimpleToggle Toggle" id="__w2_CTdApFc__truncated"></div><div class="CollapsedAnswersSectionCollapsed SimpleToggle Toggle hidden" id="__w2_CTdApFc__expanded"></div></div></div></div></div></div><div id="ld_fbbohe_110926"><div class="pager_next" id="__w2_wGzgsi9_loading"><div class="__wn2_loading"><span class="__wn2_loading_spinner"></span></div></div><div class="pager_next action_button row hidden" id="__w2_wGzgsi9_more" style="display: none;">View More Answers</div><div class="pager_sentinel" id="__w2_wGzgsi9_sentinel"></div></div></div></div><div id="ld_kumplh_94732"><div class="w4_5"><div class="logged_out_related_questions_container"><div class="logged_out_related_questions_heading"><h4>Related Questions</h4><div class="question_related list"><ul class="list_contents"><li class="related_question"><div id="__w2_QBhVhZ7_actionable"><div id="ld_fkdoua_99445"><a class="question_link" href="/Given-a-string-how-do-I-find-the-number-of-distinct-substrings-of-the-string" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_HCHVPQi_link"><span class="question_text"><span id="ld_fkdoua_99465"></span><span class="rendered_qtext">Given a string, how do I find the number of distinct substrings of the string?</span></span></a></div></div></li><li class="related_question"><div id="__w2_jxgozTZ_actionable"><div id="ld_fkdoua_99446"><a class="question_link" href="/JAVA-code-to-get-a-set-of-all-possible-substrings-of-a-string-in-O-nLogn-for-given-string-n-size-of-string" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_XHAkCOH_link"><span class="question_text"><span id="ld_fkdoua_99466"></span><span class="rendered_qtext">JAVA code to get a set of all possible substrings of a string in O(nLogn)  for given string , n = size of string?</span></span></a></div></div></li><li class="related_question"><div id="__w2_dwN1qHq_actionable"><div id="ld_fkdoua_99447"><a class="question_link" href="/Suffix-Arrays/Given-two-strings-s1-and-s2-What-is-the-best-algorithm-to-find-the-number-of-common-sub-strings-between-s1-and-s2-of-length-1-2-upto-min-s1-s2" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_cGNkG76_link"><span class="question_text"><span id="ld_fkdoua_99483"><span class="question_context"><span id="ld_fkdoua_99485"><span class="TopicNameSpan TopicName">Suffix Arrays</span></span><span class="normal">:</span> </span></span><span class="rendered_qtext">Given two strings s1 and s2 .What is the best algorithm to find the number of common sub-strings between s1 and s2 of length 1 , 2,... upto mi...</span></span></a></div></div></li><li class="related_question"><div id="__w2_cFU5CYH_actionable"><div id="ld_fkdoua_99448"><a class="question_link" href="/How-can-we-find-the-longest-substring-with-at-most-two-different-characters-of-a-given-string-in-O-n" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_gifyrKc_link"><span class="question_text"><span id="ld_fkdoua_99467"></span><span class="rendered_qtext">How can we find the longest substring with at most two different characters of a given string in O(n)?</span></span></a></div></div></li><li class="related_question"><div id="__w2_rAAIuR0_actionable"><div id="ld_fkdoua_99449"><a class="question_link" href="/What-is-the-best-way-to-find-the-longest-common-palindromic-substring-between-2-strings" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_xROtkmD_link"><span class="question_text"><span id="ld_fkdoua_99468"></span><span class="rendered_qtext">What is the best way to find the longest common palindromic substring between 2 strings?</span></span></a></div></div></li><li class="related_question"><div id="__w2_Ajd8bTe_actionable"><div id="ld_fkdoua_99450"><a class="question_link" href="/How-can-we-find-the-number-of-distinct-substrings-in-a-string-that-are-palindromes-in-O-N-or-O-N-log-N" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_Zu64lf5_link"><span class="question_text"><span id="ld_fkdoua_99469"></span><span class="rendered_qtext">How can we find the number of distinct substrings in a string that are palindromes in O(N) or O(N log N)?</span></span></a></div></div></li><li class="related_question"><div id="__w2_KcEIqnU_actionable"><div id="ld_fkdoua_99451"><a class="question_link" href="/Given-k-strings-how-can-we-find-the-longest-common-substring-efficiently" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_DGqqLXj_link"><span class="question_text"><span id="ld_fkdoua_99470"></span><span class="rendered_qtext">Given 'k' strings, how can we find the longest common substring efficiently?</span></span></a></div></div></li><li class="related_question"><div id="__w2_W0z0kCk_actionable"><div id="ld_fkdoua_99452"><a class="question_link" href="/How-can-we-find-the-number-of-palindromic-substrings-in-a-string-in-linear-time" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_rzLxKwx_link"><span class="question_text"><span id="ld_fkdoua_99471"></span><span class="rendered_qtext">How can we find the number of palindromic substrings in a string in linear time?</span></span></a></div></div></li><li class="related_question"><div id="__w2_KN1UYyj_actionable"><div id="ld_fkdoua_99453"><a class="question_link" href="/How-can-I-find-the-longest-common-substring-of-three-or-more-strings-using-a-suffix-array" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_thhvD2j_link"><span class="question_text"><span id="ld_fkdoua_99472"></span><span class="rendered_qtext">How can I find the longest common substring of three or more strings using a suffix array?</span></span></a></div></div></li><li class="related_question"><div id="__w2_fqU7R4h_actionable"><div id="ld_fkdoua_99454"><a class="question_link" href="/Strings-data-structure/I-know-Suffix-Array-contruction-in-O-n*log-n-*log-n-Now-I-am-trying-to-learn-DC3-algorithm-for-the-same-Could-anybody-explain-me-how-this-algorithms-works-in-linear-time-and-also-good-implementation" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_XgMNPhU_link"><span class="question_text"><span id="ld_fkdoua_99484"><span class="question_context"><span id="ld_fkdoua_99486"><span class="TopicNameSpan TopicName">Strings (data structure)</span></span><span class="normal">:</span> </span></span><span class="rendered_qtext">I know Suffix Array contruction in <span class="render_latex">[math] O(n*log(n) *log(n)) [/math]</span>. Now I am trying to learn DC3 algorithm for the same. Could anybody explain me how this algorithms works i...</span></span></a></div></div></li><li class="related_question"><div id="__w2_cK136ik_actionable"><div id="ld_fkdoua_99455"><a class="question_link" href="/How-can-find-all-possible-way-of-substring-of-given-string-in-C-programming" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_Y0vtfCi_link"><span class="question_text"><span id="ld_fkdoua_99473"></span><span class="rendered_qtext">How can find all possible way of substring of given string in C programming?</span></span></a></div></div></li><li class="related_question"><div id="__w2_WSLzUlK_actionable"><div id="ld_fkdoua_99456"><a class="question_link" href="/How-do-I-find-all-consecutive-substrings-in-a-string-given-two-indices" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_lQnI6io_link"><span class="question_text"><span id="ld_fkdoua_99474"></span><span class="rendered_qtext">How do I find all consecutive substrings in a string given two indices?</span></span></a></div></div></li><li class="related_question"><div id="__w2_FyLhK8i_actionable"><div id="ld_fkdoua_99457"><a class="question_link" href="/What-are-the-approaches-suitable-to-generate-all-substrings-of-a-given-string" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_F0nfQhh_link"><span class="question_text"><span id="ld_fkdoua_99475"></span><span class="rendered_qtext">What are the approaches suitable to generate all substrings of a given string?</span></span></a></div></div></li><li class="related_question"><div id="__w2_iNUYn3N_actionable"><div id="ld_fkdoua_99458"><a class="question_link" href="/Given-a-string-find-the-length-of-longest-substring-where-no-character-repeats-twice" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_HQOZ7H5_link"><span class="question_text"><span id="ld_fkdoua_99476"></span><span class="rendered_qtext">Given a string, find the length of longest substring where no character repeats twice?</span></span></a></div></div></li><li class="related_question"><div id="__w2_lhA6TFB_actionable"><div id="ld_fkdoua_99459"><a class="question_link" href="/C-program-to-find-the-unique-number-of-substring-in-a-given-string" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_sIsTUyu_link"><span class="question_text"><span id="ld_fkdoua_99477"></span><span class="rendered_qtext">C program to find the unique number of substring in a given string?</span></span></a></div></div></li><li class="related_question"><div id="__w2_J3qFMUo_actionable"><div id="ld_fkdoua_99460"><a class="question_link" href="/Difference-between-char-array-and-string-array" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_Ha5GAiK_link"><span class="question_text"><span id="ld_fkdoua_99478"></span><span class="rendered_qtext">Difference between char array and string array?</span></span></a></div></div></li><li class="related_question"><div id="__w2_hwhuf0V_actionable"><div id="ld_fkdoua_99461"><a class="question_link" href="/How-do-I-optimally-find-total-substrings-in-a-given-string-whose-sum-is-divisible-by-n" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_dZKNQI8_link"><span class="question_text"><span id="ld_fkdoua_99479"></span><span class="rendered_qtext">How do I optimally find total substrings in a given string whose sum is divisible by n?</span></span></a></div></div></li><li class="related_question"><div id="__w2_nqeNjZf_actionable"><div id="ld_fkdoua_99462"><a class="question_link" href="/How-do-I-generate-all-possible-substrings-of-a-string" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_z0wZPcq_link"><span class="question_text"><span id="ld_fkdoua_99480"></span><span class="rendered_qtext">How do I generate all possible substrings of a string?</span></span></a></div></div></li><li class="related_question"><div id="__w2_OjozUy4_actionable"><div id="ld_fkdoua_99463"><a class="question_link" href="/Given-two-strings-T-and-S-how-can-I-find-a-substring-in-T-that-is-an-anagram-of-S-Assume-alphabet-set-is-really-big-and-try-not-to-use-any-extra-space" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_WhuB1Wn_link"><span class="question_text"><span id="ld_fkdoua_99481"></span><span class="rendered_qtext">Given two strings T and S, how can I find a substring in T that is an anagram of S? Assume alphabet set is really big and try not to use any e...</span></span></a></div></div></li><li class="related_question"><div id="__w2_i5A0WEL_actionable"><div id="ld_fkdoua_99464"><a class="question_link" href="/Given-a-random-string-S-S-5000-find-the-number-of-distinct-continuous-substrings-of-S-that-are-palindromes" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_SmqO59U_link"><span class="question_text"><span id="ld_fkdoua_99482"></span><span class="rendered_qtext">Given a random string S (|S|&lt;=5000), find the number of distinct continuous substrings of S that are palindromes?</span></span></a></div></div></li></ul></div></div></div></div></div></div></div><div class="layout_2col_side"><div id="__w2_W1vaoR0_actions"><div id="__w2_BlM0C7I_related_questions"><div id="ld_iddrsb_98234"><div class="SimpleToggle RelatedQuestions Toggle" id="__w2_U8wsi0W__truncated"><div class="SimpleToggle RelatedQuestions Toggle"><div id="__w2_U8wsi0W_related_questions"><h3>Related Questions</h3><div class="question_related list"><ul class="list_contents"><li class="related_question"><div id="__w2_w36WZgD_actionable"><div id="ld_smfsba_103346"><a class="question_link" href="/Given-a-string-how-do-I-find-the-number-of-distinct-substrings-of-the-string" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_xUGTAZw_link"><span class="question_text"><span id="ld_smfsba_103356"></span><span class="rendered_qtext">Given a string, how do I find the number of distinct substrings of the string?</span></span></a></div></div></li><li class="related_question"><div id="__w2_jMbac0o_actionable"><div id="ld_smfsba_103347"><a class="question_link" href="/JAVA-code-to-get-a-set-of-all-possible-substrings-of-a-string-in-O-nLogn-for-given-string-n-size-of-string" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_VbIZmqH_link"><span class="question_text"><span id="ld_smfsba_103357"></span><span class="rendered_qtext">JAVA code to get a set of all possible substrings of a string in O(nLogn)  for given string , n = size of string?</span></span></a></div></div></li><li class="related_question"><div id="__w2_KDPt3yW_actionable"><div id="ld_smfsba_103348"><a class="question_link" href="/Suffix-Arrays/Given-two-strings-s1-and-s2-What-is-the-best-algorithm-to-find-the-number-of-common-sub-strings-between-s1-and-s2-of-length-1-2-upto-min-s1-s2" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_xy0d5a6_link"><span class="question_text"><span id="ld_smfsba_103364"><span class="question_context"><span id="ld_smfsba_103366"><span class="TopicNameSpan TopicName">Suffix Arrays</span></span><span class="normal">:</span> </span></span><span class="rendered_qtext">Given two strings s1 and s2 .What is the best algorithm to find the number of common sub-strings between s1 and s2 of length 1 , 2,... upto mi...</span></span></a></div></div></li><li class="related_question"><div id="__w2_qB6Zgis_actionable"><div id="ld_smfsba_103349"><a class="question_link" href="/How-can-we-find-the-longest-substring-with-at-most-two-different-characters-of-a-given-string-in-O-n" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_AQIRxo8_link"><span class="question_text"><span id="ld_smfsba_103358"></span><span class="rendered_qtext">How can we find the longest substring with at most two different characters of a given string in O(n)?</span></span></a></div></div></li><li class="related_question"><div id="__w2_dHfyUM8_actionable"><div id="ld_smfsba_103350"><a class="question_link" href="/What-is-the-best-way-to-find-the-longest-common-palindromic-substring-between-2-strings" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_uSuZjMS_link"><span class="question_text"><span id="ld_smfsba_103359"></span><span class="rendered_qtext">What is the best way to find the longest common palindromic substring between 2 strings?</span></span></a></div></div></li><li class="related_question"><div id="__w2_f27nDkD_actionable"><div id="ld_smfsba_103351"><a class="question_link" href="/How-can-we-find-the-number-of-distinct-substrings-in-a-string-that-are-palindromes-in-O-N-or-O-N-log-N" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_P7ydqWs_link"><span class="question_text"><span id="ld_smfsba_103360"></span><span class="rendered_qtext">How can we find the number of distinct substrings in a string that are palindromes in O(N) or O(N log N)?</span></span></a></div></div></li><li class="related_question"><div id="__w2_ozr8PP2_actionable"><div id="ld_smfsba_103352"><a class="question_link" href="/Given-k-strings-how-can-we-find-the-longest-common-substring-efficiently" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_zNi703y_link"><span class="question_text"><span id="ld_smfsba_103361"></span><span class="rendered_qtext">Given 'k' strings, how can we find the longest common substring efficiently?</span></span></a></div></div></li><li class="related_question"><div id="__w2_bWIQpAM_actionable"><div id="ld_smfsba_103353"><a class="question_link" href="/How-can-we-find-the-number-of-palindromic-substrings-in-a-string-in-linear-time" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_FmxSznT_link"><span class="question_text"><span id="ld_smfsba_103362"></span><span class="rendered_qtext">How can we find the number of palindromic substrings in a string in linear time?</span></span></a></div></div></li><li class="related_question"><div id="__w2_pFZvbhb_actionable"><div id="ld_smfsba_103354"><a class="question_link" href="/How-can-I-find-the-longest-common-substring-of-three-or-more-strings-using-a-suffix-array" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_sVVHrJH_link"><span class="question_text"><span id="ld_smfsba_103363"></span><span class="rendered_qtext">How can I find the longest common substring of three or more strings using a suffix array?</span></span></a></div></div></li><li class="related_question"><div id="__w2_YN29iLl_actionable"><div id="ld_smfsba_103355"><a class="question_link" href="/Strings-data-structure/I-know-Suffix-Array-contruction-in-O-n*log-n-*log-n-Now-I-am-trying-to-learn-DC3-algorithm-for-the-same-Could-anybody-explain-me-how-this-algorithms-works-in-linear-time-and-also-good-implementation" target="_blank" action_mousedown="QuestionLinkClickthrough" id="__w2_GrovT2z_link"><span class="question_text"><span id="ld_smfsba_103365"><span class="question_context"><span id="ld_smfsba_103367"><span class="TopicNameSpan TopicName">Strings (data structure)</span></span><span class="normal">:</span> </span></span><span class="rendered_qtext">I know Suffix Array contruction in <span class="render_latex">[math] O(n*log(n) *log(n)) [/math]</span>. Now I am trying to learn DC3 algorithm for the same. Could anybody explain me how this algorithms works i...</span></span></a></div></div></li></ul></div></div></div></div><div class="SimpleToggle RelatedQuestions Toggle hidden" id="__w2_U8wsi0W__expanded"></div></div></div></div></div></div></div></div></div></div></div></div><div class="clearfix" id="ld_affqfs_18165"><div class="SimpleToggle LoggedOutContentPageFeed Toggle ContentPageFeed" id="__w2_nJBPSty__truncated"><div class="SimpleToggle LoggedOutContentPageFeed Toggle ContentPageFeed" id="__w2_nJBPSty_wrapper"><div class="ContentWrapper top_stories_content_wrapper first_content_page_feed"><a class="title" href="/" target="_blank">Top Stories</a><span class="" id="__w2_nJBPSty_loadingshow"><div class="Spinner" id="__w2_BcThfHD_display_area"><div class=" __w2_Spinner_Component "><div class="__q_spinner" role="progressbar" style="position: relative; width: 0px; z-index: 999;"><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-0-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(0deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-1-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(30deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-2-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(60deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-3-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(90deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-4-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(120deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-5-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(150deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-6-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(180deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-7-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(210deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-8-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(240deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-9-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(270deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-10-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(300deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div><div style="position: absolute; top: -1px; opacity: 0.25; animation: opacity-70-25-11-12 1s linear infinite;"><div style="position: absolute; width: 6px; height: 2px; box-shadow: rgba(0, 0, 0, 0.0980392) 0px 0px 1px; transform-origin: left 50% 0px; transform: rotate(330deg) translate(5px, 0px) scale(1); border-radius: 1px; background: rgb(153, 153, 153);"></div></div></div></div></div></span></div></div></div><div class="SimpleToggle LoggedOutContentPageFeed Toggle ContentPageFeed hidden" id="__w2_nJBPSty__expanded"><div class="__contentfor_loading_dots"><div class="LoadingDots regular"><div class="dot first"></div><div class="dot second"></div><div class="dot third"></div></div></div></div></div><div class="LargeFooter"><div class="footer_alphabet"><div class="alphabet_item"><a href="/sitemap">Sitemap</a></div><div class="alphabet_item"><a href="/sitemap/alphabetical_topics/0">#</a></div><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/a">A</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/b">B</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/c">C</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/d">D</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/e">E</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/f">F</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/g">G</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/h">H</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/i">I</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/j">J</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/k">K</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/l">L</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/m">M</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/n">N</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/o">O</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/p">P</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/q">Q</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/r">R</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/s">S</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/t">T</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/u">U</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/v">V</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/w">W</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/x">X</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/y">Y</a></span><span class="alphabet_item"><a href="/sitemap/alphabetical_topics/z">Z</a></span></div><div class="footer_static_items"><a href="/about">About</a> - <a href="/careers">Careers</a> - <a href="/about/privacy">Privacy</a> - <a href="/about/tos">Terms</a></div></div><div id="ld_affqfs_18160"></div><div class="__live_spinner hidden" id="__w2_BiCeeeZ_loading"><div class="__live_spinner_indicator" id="__w2_BiCeeeZ_spinner"></div></div><div id="ld_affqfs_18162"></div><div class="tiny_swf"><object type="application/x-shockwave-flash" allowscriptaccess="always" data="https://qsf.is.quoracdn.net/-7cf2d1365dbaf88e.swf" width="1" height="1" id="__w2_jkNjLQz_flash" style="visibility: visible;"><param name="allowScriptAccess" value="always" /><param name="flashvars" value="domain=www.quora.com" /></object></div><img src="/_/a3836762b015b746bf113d118b0bd1da.gif?hash=dfdb7531-b41b-4d31-8c3a-281364cc338e" style="display: none" /><script type="text/javascript">require.whenReady("shared/main-loaded",function(){require("shared/main-loaded");
require.enqueue(function(require) {
    require('webnode2').windowId = "dep2608-1344518315271159384";
});
});</script><script type="text/javascript">require.whenReady("shared/main-loaded",function(){require("shared/main-loaded");
require.enqueue(function(require) {
    require("tchannel_up").start(0, "main-w-dep2608-1344518315271159384", "chan22-8888", "quora.com", "");
});
});</script><script type="text/javascript">require.whenReady("shared/main-loaded",function(){require("shared/main-loaded");
            require.enqueue(function(require) {
                require("cookies").cookie("tz", new Date().getTimezoneOffset(), {"path": "/"});
            });
            });</script><script src="https://www.google.com/recaptcha/api.js" async="" defer=""></script><script type="text/javascript">require.whenReady("shared/main-loaded",function(){require("shared/main-loaded");document.title="Given an array of strings, how can I find a small set of substrings such that the array of strings can be partitioned based on the matching substrings with reasonably even distribution? - Quora";
                require.enqueue(function(require) {
                    if (window.w2_timing)
                        w2_timing.logTime('componentInitStart');
                    var W2 = require('webnode2');
            W2.addComponentMetadata({parents: {"w36WZgD": "IMUm3Zr", "e1hhBOa": "f2YePX4", "VyhwfAa": "*ROOT*", "xUGTAZw": "w36WZgD", "D1z4eJU": "XgMNPhU", "W0z0kCk": "DNAAoVs", "jkNjLQz": "*ROOT*", "tmPcR7M": "xUGTAZw", "xy0d5a6": "KDPt3yW", "uSuZjMS": "dHfyUM8", "FWVrBjb": "aaPrcwy", "tUnck3Z": "fUfjPzv", "D4yH1hg": "jjxw7Ep", "jt4bKZK": "sVVHrJH", "AQIRxo8": "qB6Zgis", "v1FG61p": "dZKNQI8", "tyk200S": "kghlPpi", "fqU7R4h": "DNAAoVs", "miYRdUK": "gPDOvvg", "YW6cNPJ": "VbIZmqH", "UAZMo5w": "xy0d5a6", "BiCeeeZ": "*ROOT*", "fPmnHt8": "vIIViYd", "FyLhK8i": "DNAAoVs", "fN3eSSW": "W1vaoR0", "thhvD2j": "KN1UYyj", "yQ0pt9N": "gifyrKc", "mJk6juf": "Y0vtfCi", "rAAIuR0": "DNAAoVs", "GpiyrM0": "QSN1Aih", "Ha5GAiK": "J3qFMUo", "dHfyUM8": "IMUm3Zr", "BlM0C7I": "W1vaoR0", "z0wZPcq": "nqeNjZf", "bWIQpAM": "IMUm3Zr", "f27nDkD": "IMUm3Zr", "VbIZmqH": "jMbac0o", "WPZFEyn": "EjiY1hF", "xPVyAmy": "fN3eSSW", "R6AhX9w": "rzLxKwx", "DGqqLXj": "KcEIqnU", "qRTj0Rv": "HIktmnk", "wGzgsi9": "e1hhBOa", "EwifCE8": "lQnI6io", "AIkk4f7": "K2Ia3Ya", "GQQQHWr": "e1hhBOa", "QlF6JW9": "vIIViYd", "QSN1Aih": "gIue0xc", "gifyrKc": "cFU5CYH", "vvPk3dZ": "lHcaqYA", "dwN1qHq": "DNAAoVs", "GIa0oKJ": "vIIViYd", "NjKqDdl": "DGqqLXj", "YmoEv87": "K2Ia3Ya", "STLoG3M": "*ROOT*", "XIpEkGp": "*ROOT*", "lHcaqYA": "MuPE1sd", "pFZvbhb": "IMUm3Zr", "XcaDtSv": "Ha5GAiK", "XHAkCOH": "jxgozTZ", "Knj9RjN": "tUnck3Z", "hu1RRPM": "FmxSznT", "qj1MKRP": "*ROOT*", "BcThfHD": "nJBPSty", "GrovT2z": "YN29iLl", "f2YePX4": "fN3eSSW", "nJBPSty": "vIIViYd", "zNi703y": "ozr8PP2", "fDdZxYT": "MuPE1sd", "vkx3cNc": "kghlPpi", "lQnI6io": "WSLzUlK", "bFqdPZl": "gIue0xc", "KSOYPHl": "kghlPpi", "EjiY1hF": "dsu3QGp", "dU1aPhq": "EjiY1hF", "HCHVPQi": "QBhVhZ7", "AABJ8uh": "D1z4eJU", "iNUYn3N": "DNAAoVs", "jxgozTZ": "DNAAoVs", "KcEIqnU": "DNAAoVs", "B5159Mj": "GTrJBkS", "AiUS3Ld": "K2Ia3Ya", "oFfJnxO": "nNXRAII", "o1fwU1q": "XHAkCOH", "g5TZ1Mz": "e1hhBOa", "vLY4Eby": "vIIViYd", "oHT797v": "Knj9RjN", "aaPrcwy": "cPbYmyI", "c0whgrs": "*ROOT*", "xROtkmD": "rAAIuR0", "cFU5CYH": "DNAAoVs", "BobZrDQ": "zNi703y", "r2Ykh1E": "EjiY1hF", "kWIIJWB": "thhvD2j", "SmqO59U": "i5A0WEL", "J3qFMUo": "DNAAoVs", "UUwXjDW": "vvPk3dZ", "K2Ia3Ya": "dU1aPhq", "MuPE1sd": "n2cUZX7", "sIsTUyu": "lhA6TFB", "WSLzUlK": "DNAAoVs", "cK136ik": "DNAAoVs", "F0nfQhh": "FyLhK8i", "CTdApFc": "Q1sE6eJ", "QBhVhZ7": "DNAAoVs", "P7ydqWs": "f27nDkD", "BqIESyA": "P7ydqWs", "Mq16Sc2": "Zu64lf5", "m1w3TO9": "*ROOT*", "cPbYmyI": "gIue0xc", "KN1UYyj": "DNAAoVs", "hwhuf0V": "DNAAoVs", "nqeNjZf": "DNAAoVs", "ZSl68Yp": "W1vaoR0", "n2cUZX7": "ZSl68Yp", "jjxw7Ep": "e8MinbS", "H14iZ2d": "g5TZ1Mz", "lhA6TFB": "DNAAoVs", "j13tf9G": "*ROOT*", "I8VMVPy": "WhuB1Wn", "WhuB1Wn": "OjozUy4", "W1vaoR0": "nNXRAII", "TAq1ZcV": "AQIRxo8", "XgMNPhU": "fqU7R4h", "puTaMJ1": "UAZMo5w", "GTrJBkS": "vLY4Eby", "gIue0xc": "EjiY1hF", "fKnJHVD": "W1vaoR0", "gPDOvvg": "qOzchpQ", "vIIViYd": "*ROOT*", "RExmlGo": "xROtkmD", "kghlPpi": "W1vaoR0", "NXIk0S5": "HQOZ7H5", "vjPkKqM": "fN3eSSW", "TXxiqKF": "F0nfQhh", "O1qXHEz": "UUwXjDW", "YN29iLl": "IMUm3Zr", "SB9h7Yk": "gIue0xc", "FSJgQve": "nNXRAII", "B2gObB3": "*ROOT*", "e8MinbS": "fDdZxYT", "OeXFNKi": "xPVyAmy", "YzAGPI6": "sIsTUyu", "dsu3QGp": "rIlohl8", "NT97UEh": "SmqO59U", "Ajd8bTe": "DNAAoVs", "Q1sE6eJ": "H14iZ2d", "FmxSznT": "bWIQpAM", "f7UvjQi": "Q1sE6eJ", "U8wsi0W": "BlM0C7I", "WtshFVi": "kghlPpi", "rIlohl8": "GQQQHWr", "sVVHrJH": "pFZvbhb", "i5A0WEL": "DNAAoVs", "dZKNQI8": "hwhuf0V", "Vz9D0PS": "vLY4Eby", "IMUm3Zr": "U8wsi0W", "ozr8PP2": "IMUm3Zr", "IkiRyaa": "kghlPpi", "njkzTah": "uSuZjMS", "Svdfw8D": "K2Ia3Ya", "gpdFQUb": "*ROOT*", "kdBFe79": "bFqdPZl", "jMbac0o": "IMUm3Zr", "OjozUy4": "DNAAoVs", "DNAAoVs": "hCBJjTc", "Y0vtfCi": "cK136ik", "b3AJ9kB": "HCHVPQi", "Vb2xbmX": "KSuRaHp", "HIktmnk": "GrovT2z", "bJMjyA3": "fN3eSSW", "qOzchpQ": "ZSl68Yp", "Zu64lf5": "Ajd8bTe", "y8ORXce": "K2Ia3Ya", "YbeLpIN": "z0wZPcq", "JhIGr76": "nNXRAII", "qB6Zgis": "IMUm3Zr", "rzLxKwx": "W0z0kCk", "KSuRaHp": "cGNkG76", "WndrfrD": "ZSl68Yp", "Zm3YpoS": "vjPkKqM", "OIRrvHc": "K2Ia3Ya", "hCBJjTc": "fN3eSSW", "djVZKJQ": "kghlPpi", "Ig551XB": "AiUS3Ld", "HQOZ7H5": "iNUYn3N", "cORDm0t": "*ROOT*", "cGNkG76": "dwN1qHq", "fUfjPzv": "MuPE1sd", "KDPt3yW": "IMUm3Zr", "nNXRAII": "vIIViYd", "Nho54IB": "nNXRAII"}, children: {"vLY4Eby": {"lookup_bar": "GTrJBkS"}, "vIIViYd": {"content": "nNXRAII"}, "e1hhBOa": {"more_button": "wGzgsi9"}}, knowsAbout: {"IkiRyaa": {"toggled": "toggled"}, "GTrJBkS": {"wizard": "wizard", "add_question": "add_question", "results": "results", "selector": "."}, "U8wsi0W": {"toggled": "toggled"}, "cPbYmyI": {"hover_menu": "."}, "vvPk3dZ": {"topic_name_link": "."}, "EjiY1hF": {"answer": "."}, "e8MinbS": {"topic_name_link": "."}, "ZSl68Yp": {"question_main_editor": "."}, "e1hhBOa": {"more_button": "more_button", "html_nav": "html_nav"}, "kdBFe79": {"hover_menu": "."}, "vIIViYd": {"content": "content", "layout": "."}, "tUnck3Z": {"topic_name_link": "."}, "W1vaoR0": {"home_logged_out": ".", "question_topics": "question_topics"}}, groups: {"__w2_GTrJBkS_interaction": ["__w2_GTrJBkS_input"]}, domids: {"e1hhBOa": "ld_kumplh_94734", "nJBPSty": "ld_affqfs_18165", "r2Ykh1E": "ld_iddrsb_98238", "gPDOvvg": "ld_qmcwch_93600", "xUGTAZw": "ld_smfsba_103346", "D1z4eJU": "ld_fkdoua_99484", "Ha5GAiK": "ld_fkdoua_99460", "MuPE1sd": "ld_qmcwch_93601", "sIsTUyu": "ld_fkdoua_99459", "BobZrDQ": "ld_smfsba_103361", "xy0d5a6": "ld_smfsba_103348", "n2cUZX7": "ld_qmcwch_93597", "FWVrBjb": "ld_otvinj_94926", "tUnck3Z": "ld_bgodnd_104488", "P7ydqWs": "ld_smfsba_103351", "jt4bKZK": "ld_smfsba_103363", "AQIRxo8": "ld_smfsba_103349", "v1FG61p": "ld_fkdoua_99479", "BqIESyA": "ld_smfsba_103360", "fN3eSSW": "ld_iddrsb_98227", "miYRdUK": "ld_qmcwch_93602", "kWIIJWB": "ld_fkdoua_99472", "cPbYmyI": "ld_otvinj_94923", "b3AJ9kB": "ld_fkdoua_99465", "ZSl68Yp": "ld_iddrsb_98228", "CTdApFc": "ld_ifktdf_97877", "SmqO59U": "ld_fkdoua_99464", "jjxw7Ep": "ld_bgodnd_104490", "H14iZ2d": "ld_mewqqx_97581", "j13tf9G": "ld_affqfs_18162", "I8VMVPy": "ld_fkdoua_99481", "thhvD2j": "ld_fkdoua_99453", "W1vaoR0": "ld_iddrsb_98226", "yQ0pt9N": "ld_fkdoua_99467", "TAq1ZcV": "ld_smfsba_103358", "XgMNPhU": "ld_fkdoua_99454", "puTaMJ1": "ld_smfsba_103366", "mJk6juf": "ld_fkdoua_99473", "Zm3YpoS": "ld_kumplh_94733", "Y0vtfCi": "ld_fkdoua_99455", "K2Ia3Ya": "ld_iddrsb_98240", "cGNkG76": "ld_fkdoua_99447", "Zu64lf5": "ld_fkdoua_99450", "z0wZPcq": "ld_fkdoua_99462", "RExmlGo": "ld_fkdoua_99468", "tyk200S": "ld_iddrsb_98232", "NXIk0S5": "ld_fkdoua_99476", "VbIZmqH": "ld_smfsba_103347", "vjPkKqM": "ld_kumplh_94730", "WPZFEyn": "ld_iddrsb_98237", "xPVyAmy": "ld_kumplh_94729", "TXxiqKF": "ld_fkdoua_99475", "lQnI6io": "ld_fkdoua_99456", "R6AhX9w": "ld_fkdoua_99471", "e8MinbS": "ld_bgodnd_104487", "Knj9RjN": "ld_bgodnd_104491", "DGqqLXj": "ld_fkdoua_99451", "tmPcR7M": "ld_smfsba_103356", "NT97UEh": "ld_fkdoua_99482", "F0nfQhh": "ld_fkdoua_99457", "qRTj0Rv": "ld_smfsba_103367", "wGzgsi9": "ld_fbbohe_110926", "EwifCE8": "ld_fkdoua_99474", "Q1sE6eJ": "ld_ezibhl_96441", "GQQQHWr": "ld_fbbohe_110924", "FmxSznT": "ld_smfsba_103353", "Mq16Sc2": "ld_fkdoua_99469", "NjKqDdl": "ld_fkdoua_99470", "QSN1Aih": "ld_otvinj_94925", "dZKNQI8": "ld_fkdoua_99461", "U8wsi0W": "ld_iddrsb_98234", "vvPk3dZ": "ld_bgodnd_104489", "WtshFVi": "ld_iddrsb_98233", "UUwXjDW": "ld_bgodnd_104492", "sVVHrJH": "ld_smfsba_103354", "STLoG3M": "ld_affqfs_18160", "rIlohl8": "ld_lxfvue_101399", "lHcaqYA": "ld_bgodnd_104486", "WhuB1Wn": "ld_fkdoua_99463", "gifyrKc": "ld_fkdoua_99448", "XcaDtSv": "ld_fkdoua_99478", "IkiRyaa": "ld_iddrsb_98231", "njkzTah": "ld_smfsba_103359", "YzAGPI6": "ld_fkdoua_99477", "hu1RRPM": "ld_smfsba_103362", "qj1MKRP": "ld_affqfs_18161", "dsu3QGp": "ld_idsazx_97814", "uSuZjMS": "ld_smfsba_103350", "GrovT2z": "ld_smfsba_103355", "zNi703y": "ld_smfsba_103352", "gIue0xc": "ld_iddrsb_98236", "bJMjyA3": "ld_kumplh_94731", "fDdZxYT": "ld_bgodnd_104484", "vkx3cNc": "ld_iddrsb_98230", "Vb2xbmX": "ld_fkdoua_99485", "HIktmnk": "ld_smfsba_103365", "bFqdPZl": "ld_otvinj_94924", "nNXRAII": "ld_affqfs_18164", "EjiY1hF": "ld_bqpvat_94721", "dU1aPhq": "ld_iddrsb_98239", "HCHVPQi": "ld_fkdoua_99445", "AABJ8uh": "ld_fkdoua_99486", "qOzchpQ": "ld_qmcwch_93598", "y8ORXce": "ld_ncmcdc_98329", "YbeLpIN": "ld_fkdoua_99480", "UAZMo5w": "ld_smfsba_103364", "rzLxKwx": "ld_fkdoua_99452", "KSuRaHp": "ld_fkdoua_99483", "WndrfrD": "ld_qmcwch_93599", "fUfjPzv": "ld_bgodnd_104485", "hCBJjTc": "ld_kumplh_94732", "djVZKJQ": "ld_iddrsb_98229", "HQOZ7H5": "ld_fkdoua_99458", "AiUS3Ld": "ld_ncmcdc_98328", "o1fwU1q": "ld_fkdoua_99466", "g5TZ1Mz": "ld_fbbohe_110925", "vLY4Eby": "ld_affqfs_18163", "OeXFNKi": "ld_kumplh_94735", "YW6cNPJ": "ld_smfsba_103357", "XHAkCOH": "ld_fkdoua_99446", "xROtkmD": "ld_fkdoua_99449"}, hmacs: {"w36WZgD": "zdhW+uWlLCvjDX", "e1hhBOa": "2S24bo9orExmnI", "VyhwfAa": "FRM7bzTCqvlbwq", "xUGTAZw": "Q5DU4FheKYIIfH", "D1z4eJU": "KVbeJdpzIlHZKH", "W0z0kCk": "zdhW+uWlLCvjDX", "jkNjLQz": "TKP67vMcwwrO3l", "tmPcR7M": "KVbeJdpzIlHZKH", "xy0d5a6": "Q5DU4FheKYIIfH", "uSuZjMS": "Q5DU4FheKYIIfH", "FWVrBjb": "vHS0WoH5SmwYmQ", "tUnck3Z": "FFCe9FZXgmZzvm", "D4yH1hg": "qwSCqDY1h0l1To", "jt4bKZK": "KVbeJdpzIlHZKH", "AQIRxo8": "Q5DU4FheKYIIfH", "v1FG61p": "KVbeJdpzIlHZKH", "tyk200S": "O8JIlcsa+sfQrF", "fqU7R4h": "zdhW+uWlLCvjDX", "miYRdUK": "5Tbv/m6gyOKxLd", "YW6cNPJ": "KVbeJdpzIlHZKH", "UAZMo5w": "KVbeJdpzIlHZKH", "BiCeeeZ": "tANVsiE+cxkDRj", "fPmnHt8": "yIhehupLwXy2ZT", "FyLhK8i": "zdhW+uWlLCvjDX", "fN3eSSW": "uN8WDh5B2aF949", "thhvD2j": "Q5DU4FheKYIIfH", "yQ0pt9N": "KVbeJdpzIlHZKH", "mJk6juf": "KVbeJdpzIlHZKH", "rAAIuR0": "zdhW+uWlLCvjDX", "GpiyrM0": "P9Xc5/3E48D9HD", "Ha5GAiK": "Q5DU4FheKYIIfH", "dHfyUM8": "zdhW+uWlLCvjDX", "BlM0C7I": "fcOSlj8cZ52rRX", "z0wZPcq": "Q5DU4FheKYIIfH", "bWIQpAM": "zdhW+uWlLCvjDX", "f27nDkD": "zdhW+uWlLCvjDX", "VbIZmqH": "Q5DU4FheKYIIfH", "WPZFEyn": "Y+AdTuthrlh2GY", "xPVyAmy": "BxheriYYELjLOo", "R6AhX9w": "KVbeJdpzIlHZKH", "DGqqLXj": "Q5DU4FheKYIIfH", "qRTj0Rv": "aNlloNV91jVqD7", "wGzgsi9": "/TW7WZFZNft72w", "EwifCE8": "KVbeJdpzIlHZKH", "AIkk4f7": "v/sbdiAGeWDv0k", "GQQQHWr": "VTNM8FOisQKRkl", "QlF6JW9": "DAalTWsvfBzxrO", "QSN1Aih": "BlNCppFmOdazkW", "gifyrKc": "Q5DU4FheKYIIfH", "vvPk3dZ": "FFCe9FZXgmZzvm", "dwN1qHq": "zdhW+uWlLCvjDX", "GIa0oKJ": "B9kKH30vAkbmKk", "NjKqDdl": "KVbeJdpzIlHZKH", "YmoEv87": "FC/jHnx/yzEkpN", "STLoG3M": "H4N6YL2RRfUEoi", "XIpEkGp": "9JblKMaWTbc61h", "lHcaqYA": "mBvLJJlhS9t86l", "pFZvbhb": "zdhW+uWlLCvjDX", "XcaDtSv": "KVbeJdpzIlHZKH", "XHAkCOH": "Q5DU4FheKYIIfH", "Knj9RjN": "aNlloNV91jVqD7", "hu1RRPM": "KVbeJdpzIlHZKH", "qj1MKRP": "1on7AgBqko/PdP", "BcThfHD": "XS3DjnN8blc3Qc", "GrovT2z": "Q5DU4FheKYIIfH", "f2YePX4": "JmnHIw7fbKYB10", "nJBPSty": "81MJjYJpCPN2tR", "zNi703y": "Q5DU4FheKYIIfH", "fDdZxYT": "mBvLJJlhS9t86l", "vkx3cNc": "umZv7Cxmby0TwH", "lQnI6io": "Q5DU4FheKYIIfH", "bFqdPZl": "n5GBwGV9BI0dUs", "KSOYPHl": "pZ0LEKydcXty3N", "EjiY1hF": "a414QTweCXacqn", "dU1aPhq": "dh/F4KolQHPMP7", "HCHVPQi": "Q5DU4FheKYIIfH", "AABJ8uh": "aNlloNV91jVqD7", "iNUYn3N": "zdhW+uWlLCvjDX", "jxgozTZ": "zdhW+uWlLCvjDX", "KcEIqnU": "zdhW+uWlLCvjDX", "B5159Mj": "ymWNAWNIMdOKzz", "AiUS3Ld": "/yfYu+Da5pGDIZ", "oFfJnxO": "S4wcGVzUxxHge1", "o1fwU1q": "KVbeJdpzIlHZKH", "g5TZ1Mz": "VTNM8FOisQKRkl", "vLY4Eby": "aD0i31XLd8mks2", "oHT797v": "qwSCqDY1h0l1To", "aaPrcwy": "ZVyghKF0FfOSEk", "c0whgrs": "2O1ftyp2jLiIaD", "xROtkmD": "Q5DU4FheKYIIfH", "cFU5CYH": "zdhW+uWlLCvjDX", "BobZrDQ": "KVbeJdpzIlHZKH", "r2Ykh1E": "rru/xmQaCoCVF/", "kWIIJWB": "KVbeJdpzIlHZKH", "SmqO59U": "Q5DU4FheKYIIfH", "J3qFMUo": "zdhW+uWlLCvjDX", "UUwXjDW": "aNlloNV91jVqD7", "K2Ia3Ya": "PWBNuzUvleM+Ne", "MuPE1sd": "UylPNrkrE2pj93", "sIsTUyu": "Q5DU4FheKYIIfH", "WSLzUlK": "zdhW+uWlLCvjDX", "cK136ik": "zdhW+uWlLCvjDX", "F0nfQhh": "Q5DU4FheKYIIfH", "CTdApFc": "haSoja/kiZ2YhX", "QBhVhZ7": "zdhW+uWlLCvjDX", "P7ydqWs": "Q5DU4FheKYIIfH", "BqIESyA": "KVbeJdpzIlHZKH", "Mq16Sc2": "KVbeJdpzIlHZKH", "m1w3TO9": "4R3MtyRZUPRtRl", "cPbYmyI": "1sfvqiW42BPR+M", "KN1UYyj": "zdhW+uWlLCvjDX", "hwhuf0V": "zdhW+uWlLCvjDX", "nqeNjZf": "zdhW+uWlLCvjDX", "ZSl68Yp": "quiuYiRGrgNQL1", "n2cUZX7": "QQM5uOUQs8WhsR", "jjxw7Ep": "aNlloNV91jVqD7", "H14iZ2d": "3Mcr12/DelJ5/d", "lhA6TFB": "zdhW+uWlLCvjDX", "j13tf9G": "ze5Lm7THgFwGFu", "I8VMVPy": "KVbeJdpzIlHZKH", "WhuB1Wn": "Q5DU4FheKYIIfH", "W1vaoR0": "0cgS9AjvYYU7T/", "TAq1ZcV": "KVbeJdpzIlHZKH", "XgMNPhU": "Q5DU4FheKYIIfH", "puTaMJ1": "aNlloNV91jVqD7", "GTrJBkS": "af2epjWO7ZY1nI", "gIue0xc": "W1gpVmqxArXyt7", "fKnJHVD": "nuxb4Hsod+K+Re", "gPDOvvg": "AyS5v4JhQVEFah", "vIIViYd": "K0N05JGUz/jylI", "RExmlGo": "KVbeJdpzIlHZKH", "kghlPpi": "GfjbhFwt2Pto53", "NXIk0S5": "KVbeJdpzIlHZKH", "vjPkKqM": "M7472vScnT6D4K", "TXxiqKF": "KVbeJdpzIlHZKH", "O1qXHEz": "qwSCqDY1h0l1To", "YN29iLl": "zdhW+uWlLCvjDX", "SB9h7Yk": "FqJ9/Tz7iQccZz", "FSJgQve": "dZUKqgrmjfibWg", "B2gObB3": "8RVxElLKc7Cyo5", "e8MinbS": "FFCe9FZXgmZzvm", "OeXFNKi": "/NI/pgoUJ0Qv3w", "YzAGPI6": "KVbeJdpzIlHZKH", "dsu3QGp": "QmptCxbbZG7bDy", "NT97UEh": "KVbeJdpzIlHZKH", "Ajd8bTe": "zdhW+uWlLCvjDX", "Q1sE6eJ": "QmptCxbbZG7bDy", "FmxSznT": "Q5DU4FheKYIIfH", "f7UvjQi": "nnYzKJpMTjNZ9Q", "U8wsi0W": "68m7oEAL3itPPl", "WtshFVi": "Gvm2FXrbJ2J2+S", "rIlohl8": "3Mcr12/DelJ5/d", "sVVHrJH": "Q5DU4FheKYIIfH", "i5A0WEL": "zdhW+uWlLCvjDX", "dZKNQI8": "Q5DU4FheKYIIfH", "Vz9D0PS": "39vjVsep3JCVgD", "IMUm3Zr": "Sj/25PzI0SUovs", "ozr8PP2": "zdhW+uWlLCvjDX", "IkiRyaa": "mN5MUSjCFMzpuZ", "njkzTah": "KVbeJdpzIlHZKH", "Svdfw8D": "JZRCvX5I8T5IGk", "gpdFQUb": "PZehp13DRwulzr", "kdBFe79": "udZeaNz4nsP+Df", "jMbac0o": "zdhW+uWlLCvjDX", "OjozUy4": "zdhW+uWlLCvjDX", "DNAAoVs": "Sj/25PzI0SUovs", "Y0vtfCi": "Q5DU4FheKYIIfH", "b3AJ9kB": "KVbeJdpzIlHZKH", "Vb2xbmX": "aNlloNV91jVqD7", "HIktmnk": "KVbeJdpzIlHZKH", "bJMjyA3": "MeeuXNsnyDnwF3", "qOzchpQ": "NfaiNgy9tWJiQF", "Zu64lf5": "Q5DU4FheKYIIfH", "y8ORXce": "JTvtSXULcq04w6", "YbeLpIN": "KVbeJdpzIlHZKH", "JhIGr76": "YHfNweTms8ZWw8", "qB6Zgis": "zdhW+uWlLCvjDX", "rzLxKwx": "Q5DU4FheKYIIfH", "KSuRaHp": "KVbeJdpzIlHZKH", "WndrfrD": "NEel8/G7TMh4Zo", "Zm3YpoS": "ZQBHmYF8pDytsu", "OIRrvHc": "7NpLYGj4IRSU86", "hCBJjTc": "ate+JjecirOloA", "djVZKJQ": "1IspgN5S4Iu5i3", "Ig551XB": "5pDWD/q+wbL9s8", "HQOZ7H5": "Q5DU4FheKYIIfH", "cORDm0t": "wzXjEjB7bkuwCN", "cGNkG76": "Q5DU4FheKYIIfH", "fUfjPzv": "mBvLJJlhS9t86l", "KDPt3yW": "zdhW+uWlLCvjDX", "nNXRAII": "EvauR91jUnaDqk", "Nho54IB": "fTqTKBA8YOwpQv"}});
var newComponent = W2.newComponent;
var _components = [new(require("w2.interaction").InteractionModeBanner)("m1w3TO9","",{},{}),
new(require("w2.livenode").ErrorBanner)("c0whgrs","",{"default_text": "Your request was not completed."},{}),
new(require("app/view/components").JSTest)("QlF6JW9","",{},{}),
new(require("app/view/site_header/logged_out").LoggedOutSiteHeader)("vLY4Eby","",{"qid": 1442642, "vote_source": "question"},{}),
new(require('app/view/question/lookup_bar').LookupBarSelector)("GTrJBkS","lookup_bar",{"interstitials": {"answer": ["Ask and answer a question!", "Write about what you know by asking the question first."], "bad": ["Is your question complete?", "Make sure to fill out a complete sentence that's in the form of a question."], "good": ["You're almost there!", "Make sure to double check your phrasing before you press submit."], "button": ["Ask your question here!", "Write your question as a complete sentence then press submit."], "ask_question": ["What is your question?", "Ask a question and get answers from people with unique insights."]}, "max_concurrent_requests": 3, "length_limit": null, "opening_question_punctuation": "", "shouldSendJsData": false, "hasResults": false, "selector_id": -1757170502, "max_cache_size": 50, "hide_counter_on_load": false, "should_go_to_search_on_enter": false, "is_textarea": false, "logged_in": null, "allowNoSelection": true, "query": "", "queryTypingDelay": 0, "keepFilters": "", "closing_question_punctuation": "?", "should_autofocus": true},{}),
new(require("app/view/signup/conversion_logging").ConversionLogging)("Vz9D0PS","",{},{}),
new(require("app/view/home").ContentPageFeed)("nJBPSty","",{"switch_hide": "@_truncated", "key_combination": null, "switch_show": "@_expanded", "log_switch_time": false, "switch_on": ["load"], "loading_hide": "@loadinghide", "fetch_on": ["load"], "fetch_into": "@_expanded", "loading_show": "@loadingshow", "serialized_args": "00010000379fd2136d00f225a7268135fafb37b38ba86cdcce51abf8f51117ec00f3d7a2796d35085b12111947e77356af3ef3e6da3de06e9f59426e147fd5257d93204c1cacca300c45c55f2eb9ef46237bff561bbf3423755a22045cdc53f7ac2ec1f5660a7a3b574b2bb6e5e659913cf2e71e"},{}),
new(require("view/spinner").Spinner)("BcThfHD","",{},{}),
new(require('login').LoginSignal)("STLoG3M","",{"uid": null},{}),
new(require('login').LiveLogin)("B2gObB3","",{},{}),
new(require("view/captcha").Captcha)("cORDm0t","",{},{}),
new(require("view/reauth").ReauthWrapper)("XIpEkGp","",{},{}),
new(require("w2.livenode").LiveSpinner)("BiCeeeZ","",{},{}),
new(require('app/view/signup/google_').GoogleAutoLogin)("j13tf9G","",{"viewer": null, "scopes": ["email", "profile"]},{}),
new(require('app/view/mathjax').MathJaxLoader)("VyhwfAa","",{},{}),
new(require("flash").FlashClient)("jkNjLQz","",{"cp": "m", "swf_url": "https://qsf.is.quoracdn.net/-7cf2d1365dbaf88e.swf", "fc": "uVHJ03dS2W4XAgOPmfdZHQ==", "so": "main-client-1", "flash_vars": {"domain": "www.quora.com"}},{}),
new(require("view/pmsg").PMsgContainer)("JhIGr76","",{},{}),
new(require("app/view/question").QuestionMain)("W1vaoR0","",{"record_impression": true},{}),
new(require('login').LoginPageLoginListener)("fKnJHVD","",{"next": "https://www.quora.com/Given-an-array-of-strings-how-can-I-find-a-small-set-of-substrings-such-that-the-array-of-strings-can-be-partitioned-based-on-the-matching-substrings-with-reasonably-even-distribution"},{}),
new(require("app/view/layout").QTextImageEnlarger)("oFfJnxO","",{},{}),
new(require("app/view/layout").QTextEmbedEnlarger)("Nho54IB","",{},{}),
new(require("app/view/layout").QTextGIFPlayer)("FSJgQve","",{},{}),
new(require("app/view/question").QuestionArea)("ZSl68Yp","",{"qid": 1442642},{}),
new(require("app/view/topic/topic_list").QuestionTopicHorizontalList)("n2cUZX7","",{"qid": 1442642},{}),
new(require("app/view/question").AnswerListDiv)("f2YePX4","",{},{}),
new(require("unified_view/toggle").ToggleBase)("U8wsi0W","",{"switch_hide": "@_truncated", "key_combination": null, "switch_show": "@_expanded", "log_switch_time": false, "switch_on": ["click", "@more"], "loading_hide": "@loadinghide", "fetch_on": ["click", "@more"], "fetch_into": "@_expanded", "loading_show": "@loadingshow", "serialized_args": "000100005182bbbfba8195fd72e0e90ff04b8289fd9be77508a90c545b34430335eea66fb27ea8eac64ab3cbf337db41a67bb9b3bf4141fc2695ead1b290f36337672627193fa12fb4786427c168387ee86317eea8d0f3b3fbf74b2e58235afa31ca946a6b728de1201add33a210c781be000dc601196a6fc36d38a68aa03416a358cd43218d976501ad82f1f6cadb3b15515e4ff11669839f7afb8da31a14e5e4136cd31b2208223cb2c850cbcba2f90eb2a0a4cca40910c508fd0d478bbcaabcb5cb4af4fc9acabaad00a01f5f45b1c025084fbbc62fe514a47933905d087c2a56852d3b2b366634c13e0d6b7bb52742865b5710ed5924de2fc59339987f6ac84257837e2de5b986e5c9778a65ae698f79b588d849cc58d52853dad862db4cecf7e93fb920a452aef7a37a31516f2a6cd510f2"},{}),
new(require("app/view/question").RelatedQuestionsList)("IMUm3Zr","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("w36WZgD","",{"impression_target": {"hash": "related_questions|855392|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("xUGTAZw","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("jMbac0o","",{"impression_target": {"hash": "related_questions|1392573|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("VbIZmqH","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("KDPt3yW","",{"impression_target": {"hash": "related_questions|1275987|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("xy0d5a6","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("qB6Zgis","",{"impression_target": {"hash": "related_questions|1162298|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("AQIRxo8","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("dHfyUM8","",{"impression_target": {"hash": "related_questions|2462395|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("uSuZjMS","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("f27nDkD","",{"impression_target": {"hash": "related_questions|1494771|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("P7ydqWs","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("ozr8PP2","",{"impression_target": {"hash": "related_questions|1351015|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("zNi703y","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("bWIQpAM","",{"impression_target": {"hash": "related_questions|1415381|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("FmxSznT","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("pFZvbhb","",{"impression_target": {"hash": "related_questions|1944639|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("sVVHrJH","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("YN29iLl","",{"impression_target": {"hash": "related_questions|1332290|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("GrovT2z","",{},{}),
new(require("app/view/topic/topic_list").TopicListItem)("fDdZxYT","",{"tid": 31758, "remove_tooltip_text": "Remove", "qid": 1442642},{}),
new(require("view/hover_menu").HoverMenu)("e8MinbS","",{"css_positioning": false, "on": null, "load_on_pageload": false, "should_preload_menu": false, "alignment": "left", "attach_to_body": true, "kwargs": {"tid": 31758}, "click_open": false, "should_show_hover_menu": true, "show_menu": true},{}),
new(require("app/view/topic").TopicTrendingIndicator)("D4yH1hg","",{"tooltipText": "Trending"},{}),
new(require("app/view/topic/topic_list").TopicListItem)("fUfjPzv","",{"tid": 1513, "remove_tooltip_text": "Remove", "qid": 1442642},{}),
new(require("view/hover_menu").HoverMenu)("tUnck3Z","",{"css_positioning": false, "on": null, "load_on_pageload": false, "should_preload_menu": false, "alignment": "left", "attach_to_body": true, "kwargs": {"tid": 1513}, "click_open": false, "should_show_hover_menu": true, "show_menu": true},{}),
new(require("app/view/topic").TopicTrendingIndicator)("oHT797v","",{"tooltipText": "Trending"},{}),
new(require("app/view/topic/topic_list").TopicListItem)("lHcaqYA","",{"tid": 788, "remove_tooltip_text": "Remove", "qid": 1442642},{}),
new(require("view/hover_menu").HoverMenu)("vvPk3dZ","",{"css_positioning": false, "on": null, "load_on_pageload": false, "should_preload_menu": false, "alignment": "left", "attach_to_body": true, "kwargs": {"tid": 788}, "click_open": false, "should_show_hover_menu": true, "show_menu": true},{}),
new(require("app/view/topic").TopicTrendingIndicator)("O1qXHEz","",{"tooltipText": "Trending"},{}),
new(require("view/paged_list").PagedList)("e1hhBOa","",{"retarget_links": true, "buffer_count": 6, "fixed_size_paged_list": false, "capture_global_keyevents": true, "should_prefetch_feed": false, "initial_count": 6, "has_more": false, "auto_paged": true, "object_id": 1442642, "crawler": false},{}),
new(require("view/paged_list").PagedListMoreButton)("wGzgsi9","more_button",{"auto_click_period": 6000},{}),
new(require("app/view/question").RelatedQuestionsList)("DNAAoVs","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("QBhVhZ7","",{"impression_target": {"hash": "related_questions|855392|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("HCHVPQi","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("jxgozTZ","",{"impression_target": {"hash": "related_questions|1392573|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("XHAkCOH","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("dwN1qHq","",{"impression_target": {"hash": "related_questions|1275987|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("cGNkG76","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("cFU5CYH","",{"impression_target": {"hash": "related_questions|1162298|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("gifyrKc","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("rAAIuR0","",{"impression_target": {"hash": "related_questions|2462395|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("xROtkmD","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("Ajd8bTe","",{"impression_target": {"hash": "related_questions|1494771|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("Zu64lf5","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("KcEIqnU","",{"impression_target": {"hash": "related_questions|1351015|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("DGqqLXj","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("W0z0kCk","",{"impression_target": {"hash": "related_questions|1415381|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("rzLxKwx","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("KN1UYyj","",{"impression_target": {"hash": "related_questions|1944639|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("thhvD2j","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("fqU7R4h","",{"impression_target": {"hash": "related_questions|1332290|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("XgMNPhU","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("cK136ik","",{"impression_target": {"hash": "related_questions|5389586|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("Y0vtfCi","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("WSLzUlK","",{"impression_target": {"hash": "related_questions|3050555|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("lQnI6io","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("FyLhK8i","",{"impression_target": {"hash": "related_questions|1355899|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("F0nfQhh","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("iNUYn3N","",{"impression_target": {"hash": "related_questions|3489239|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("HQOZ7H5","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("lhA6TFB","",{"impression_target": {"hash": "related_questions|1012368|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("sIsTUyu","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("J3qFMUo","",{"impression_target": {"hash": "related_questions|5675620|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("Ha5GAiK","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("hwhuf0V","",{"impression_target": {"hash": "related_questions|3039685|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("dZKNQI8","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("nqeNjZf","",{"impression_target": {"hash": "related_questions|4324257|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("z0wZPcq","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("OjozUy4","",{"impression_target": {"hash": "related_questions|2392982|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("WhuB1Wn","",{},{}),
new(require("app/view/question").RelatedQuestionLink)("i5A0WEL","",{"impression_target": {"hash": "related_questions|2669598|-1316767950", "type": 21}},{}),
new(require("app/view/question").QuestionLink)("SmqO59U","",{},{}),
new(require("action_log").ActionableComponent)("rIlohl8","",{"impression_target": {"hash": "answer_ranking|-79358987", "type": 4}},{}),
new(require("action_log").ActionableComponent)("H14iZ2d","",{"impression_target": {"hash": null, "type": 4}},{}),
new(require("app/view/question").AnswerPagedListItem)("dsu3QGp","",{"view_tracking_hash": "3c26654313bb9e513151723a01669e4e", "view_tracking_key": "a-3542037"},{}),
new(require("app/view/question").AnswerPagedListItem)("Q1sE6eJ","",{"view_tracking_hash": "01840652571f8005baebfd516945da69", "view_tracking_key": "a-1442642"},{}),
new(require("unified_view/toggle").ToggleBase)("CTdApFc","",{"switch_hide": "@_truncated", "key_combination": null, "switch_show": "@_expanded", "log_switch_time": false, "switch_on": ["click", "@link"], "loading_hide": "@loadinghide", "fetch_on": ["click", "@link"], "fetch_into": "@_expanded", "loading_show": "@loadingshow", "serialized_args": "0001000045c0880eee8356e41dbf616138190278b7e968a78d06bd699b3af6628f173f7ea0a7ce5a0ac3445d379b52807d1a91cb82a1cdcbb7d516244aa499bfcf89902e2e66a0e5a86bef64a05268962a5575c426d578e4a94ce31d4d193890bf42a07dbb098045fc672d7d47cd12ba7303204bf634ab4b2d26d38120b2b98342720064d4e19e98a838275a0d11f8ea81cc4084b177e6d42eb26b84d35f5299a05df0a03b1ef176757391cc35115c8340d07ec4b0b1c174cb5b1643aa46f9e3cfad394e4fca47f213aae4caff219b7c2c2cbe750c6ef69ff32916179da2c07d84a8c143"},{}),
new(require('app/view/question').AnswerActions)("EjiY1hF","",{},{"js_key": "e8d737ca2d3c73a219b37212903c9d78"}),
new(require("app/view/components").ExpandedQText)("dU1aPhq","",{},{}),
new(require("app/view/components").AnswerHeader)("gIue0xc","",{"optimistic_for_web": true},{}),
new(require("view/hover_menu").HoverMenu)("cPbYmyI","",{"css_positioning": false, "on": null, "load_on_pageload": false, "should_preload_menu": false, "alignment": "left", "attach_to_body": true, "kwargs": {"qid": 1442642, "uid": 52986, "aid": 3542037}, "click_open": false, "should_show_hover_menu": true, "show_menu": true},{}),
new(require("view/user").UserPhoto)("aaPrcwy","",{},{}),
new(require("app/view/user/profile").VerificationBadge)("FWVrBjb","",{"tooltip_text": "Verified profile"},{}),
new(require("view/user").Name)("kdBFe79","",{"css_positioning": false, "on": null, "load_on_pageload": false, "should_preload_menu": false, "alignment": "left", "attach_to_body": true, "kwargs": {"qid": 1442642, "uid": 52986, "aid": 3542037}, "click_open": false, "should_show_hover_menu": true, "show_menu": true},{}),
new(require("app/view/question").AnswerPermaLink)("AiUS3Ld","",{},{}),
new(require("unified_view/datetime_").DateTimeComponent)("Ig551XB","",{"epoch_us": 1384912299003250, "js_disp": false, "granularity": null, "js_update_interval": 0},{}),
new(require('view/voter_list').VoterListModalLink)("Svdfw8D","",{"object_id": 3542037},{})];
W2.registerComponents(_components);
                    W2.onLoad(_components, true);
                    if (window.w2_timing)
                        w2_timing.logTime('componentInitEnd');
            
            (function() {
                require('shared/w2.timing').logTime('postOnLoad');
                var timing = require('shared/w2.timing').timing;
                $.whenLoaded(1, function() {
            })})();});});</script><script type="text/javascript">require.whenReady("shared/main-loaded",function(){require("shared/main-loaded");
require.enqueue(function(require) {
    var twRootNode = document.createElement("div");
    twRootNode.setAttribute("id", "tw-root");
    document.body.appendChild(twRootNode);
    require("twitter").asyncInit();
});
require('shared/win.load').add(function() {
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');
ga('create', 'UA-16618355-1', 'auto', {'sampleRate': 1});
ga('require', 'displayfeatures');
ga('send', 'pageview');
ga('set', 'dimension1', 'Question');
ga('set', 'dimension2', 'False');
ga('set', 'dimension3', 'False');});});</script><div id="tw-root"></div><script type="text/javascript">require.whenReady(["jquery","shared/main-loaded"],function(){require("jquery");require("shared/main-loaded");
            require.enqueue(function(require) {
                $(document).ready(function() {
                    require('shared/w2.timing').logTime('documentReady');
                });
                $(window).load(function() {
                    var timing = require('shared/w2.timing').timing;
                    require('shared/w2.timing').logTime('windowLoad');
            
timing.server_time = 229.44;
timing.window_id = "dep2608-1344518315271159384";    });});

var timing = require("shared/w2.timing").timing;
timing.page = 229.44;
timing.request = 261.69;
timing.page_size = 76016;});</script></body></html><!--perf-->